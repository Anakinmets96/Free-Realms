/********************************************************************** 

Filename	:	FreeRealmsTheme_ComboBox.thm
Content		:	FreeRealms - GComboBox control theme

Licensees may use this file in accordance with the valid Scaleform
GFC Commercial License Agreement provided with the software.

This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING 
THE WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR ANY PURPOSE.

For information regarding GFC Commercial License Agreements go to:
	online - http://www.scaleform.com/licensing.html or
	email  - sales@scaleform.com 

**********************************************************************/


// *** Main ComboBox control namespace 

with GFC_Control_ComboBox
{

	GFC_Control_DefaultComboBox_Style
	{						
		GFC_Control_Update_ChildLayout			=	GFC_CtrlTheme_Bitmap_Control_ComboBox_Update_ChildLayout;

		GFC_Control_Renderer_Control			=	GFC_CtrlTheme_Bitmap_Control_ComboBox_Renderer_Control;

		with .Renderer							
		{									
			// Item renderers					
			.TextItem							=	GFC_CtrlTheme_Bitmap_Control_ComboBox_Renderer_TextItem;
		}
												
		with .Child								
		{										
			.OuterBorder						=	GFC_CtrlTheme_Bitmap_Control_ComboBox_Child_OuterBorder;
			.InnerBorder						=	GFC_CtrlTheme_Bitmap_Control_ComboBox_Child_InnerBorder;
			.ItemEdit							=	GFC_CtrlTheme_Bitmap_Control_ComboBox_Child_ItemEdit;
			.PopupButton						=	GFC_CtrlTheme_Bitmap_Control_ComboBox_Child_PopupButton;
			.PopupBoxTable						=	GFC_CtrlTheme_Bitmap_Control_ComboBox_Child_PopupBoxTable;
		}
						
		with .StyleId
		{
			.OuterBorder						=	GPropertyId(GFC_Control_StandardBorder_Style);
			.InnerBorder						=	GPropertyId(GFC_Control_EmptyBorder_Style);
			.ItemEdit							=	GPropertyId(GFC_Control_ClearEdit_Style);
			.PopupButton						=	GPropertyId(GFC_Control_StandardButton_Style);
			.PopupBoxTable						=	GPropertyId(GFC_Control_StandardTable_Style);
		}

		with GFC_Control_Flag
		{
			// Base control flags
			.Transparent						=	GFlags(GCtrl, GFC_CF_TRANSPARENT);
			.SolidInner							=	0;	//GFlags(GCtrl, GFC_CF_SOLIDINNER);
			.SolidBackground					=	0;	//GFlags(GCtrl, GFC_CF_SOLIDBACKGROUND);
			.RegionClip							=	0;	//GFlags(GCtrl, GFC_CF_REGIONCLIP);
			.RegionClipParent					=	0;	//GFlags(GCtrl, GFC_CF_REGIONCLIP_PARENT);
			.NoExternalWindow					=	0;	//GFlags(GCtrl, GFC_CF_NOEXTERNALWINDOW);
			.HitTest							=	0;	//GFlags(GCtrl, GFC_CF_HITTEST);
			.TopLayer							=	0;	//GFlags(GCtrl, GFC_CF_TOPLAYER);
			.TopLayerBitmap						=	0;	//GFlags(GCtrl, GFC_CF_TOPLAYERBITMAP);
			.BottomLayerBitmap					=	0;	//GFlags(GCtrl, GFC_CF_BOTTOMLAYERBITMAP);
											
			// Control flag change masks	
			.Mask_InvalidateControl				=	GFlags(GCtrl, GFC_CF_DISABLED, GFC_CF_MODAL, GFC_CF_TRANSPARENT, GFC_CF_TOPLAYER, GFC_CF_FORCE_ROLLOVER);
		}

		with .Flag
		{
			// ComboBox control flags
			.NoBorder							=	0;	//GFlags(GComboBoxCtrl, GFC_CF_COMBOBOX_NOBORDER);
			.NoInnerBorder						=	GFlags(GComboBoxCtrl, GFC_CF_COMBOBOX_NOINNERBORDER);
			.NoInnerFill						=	GFlags(GComboBoxCtrl, GFC_CF_COMBOBOX_NOINNERFILL);

			.Popup_VStyle						=	GFlags(GComboBoxCtrl, GFC_CF_COMBOBOX_POPUP_VITEM);
			//.Popup_HStyle						=	GFlags(GComboBoxCtrl, GFC_CF_COMBOBOX_POPUP_RIGHT);

			// Control flag change masks	
			//.ComboBoxMask_InvalidateControl	=	GFlags(GComboBoxCtrl, GFC_CF_COMBOBOX_NOINNERFILL);
		}

		with .Size
		{
			.EditMargin							=	GRectMargin(0,0,0,0);	
			
			.PopupMinimum						=	GSize(60,2);
			.PopupUpMargin						=	GRectMargin(0,0,0,0);
			.PopupDownMargin					=	GRectMargin(0,0,0,0);
			.PopupCenterMargin					=	GRectMargin(7,0,7,1);
			
			.PopupItem_ContentMargin			=	GRectMargin(0,0,0,-1);
			.ViewItem_ContentMargin				=	GRectMargin(8,1,8,1);

			.ItemSpace							=	10;
			.TextMinimum						=	20;
			.TextMargin							=	GRectMargin(5,4,5,4);
			
			.ImageColumn						=	20;
			.ImageMargin						=	GRectMargin(2,4,2,4);
			.ImageNoTextMargin					=	GRectMargin(2,4,2,4);
			
			.Default							=	GSize(90,26);			
		}

		.Delay_IgnoreSelect						=	500;

		with .Color
		{
			with .ViewItem
			{
				.Inner_Default						=	GFC_Control_Color_3DLook_Darkest;
				.Inner_Rollover						=	GFC_Control_Color_3DLook_Darkest;
				.Inner_Select						=	GFC_Control_Color_Inner_Select;
				.Inner_Disable						=	GFC_Control_Color_3DLook_Darkest;

				.Image_Default						=	GFC_Control_Color_Image_Default;			
				.Image_Rollover						=	GFC_Control_Color_Image_Default;			
				.Image_Select						=	GFC_Control_Color_Image_Select;
				.Image_Disable						=	GFC_Control_Color_Image_Disable;
				
				.Text_Default						=	SF_CtrlTheme_FreeRealms_Control_Color_InvertText;
				.Text_Rollover						=	.Text_Default;
				.Text_Select						=	.Text_Default;			
				.Text_Disable						=	.Text_Default;			
				
				.TextShadow_Default					=	GFC_Control_Color_TextShadow_Default;
				.TextShadow_Rollover				=	.TextShadow_Default;
				.TextShadow_Select					=	.TextShadow_Default;			
				.TextShadow_Disable					=	.TextShadow_Default;			
			}

			with .PopupItem
			{
				.Inner_Default						=	GFC_Control_Color_Inner_Default;
				.Inner_Select						=	GFC_Control_Color_Inner_Select;
				.Inner_Disable						=	GFC_Control_Color_Inner_Disable;
				.Inner_DisableSelect				=	GFC_Control_Color_Inner_DisableSelect;

				.Image_Default						=	GFC_Control_Color_Image_Default;			
				.Image_Select						=	GFC_Control_Color_Image_Select;
				.Image_Disable						=	GFC_Control_Color_Image_Disable;
				.Image_DisableSelect				=	GFC_Control_Color_Image_DisableSelect;
				
				.Text_Default						=	GFC_Control_Color_Text_Default;
				.Text_Select						=	GFC_Control_Color_Text_Select;			
				.Text_Disable						=	GFC_Control_Color_Text_Disable;			
				.Text_DisableSelect					=	GFC_Control_Color_Text_DisableSelect;			
				
				.TextShadow_Default					=	GFC_Control_Color_TextShadow_Default;
				.TextShadow_Select					=	GFC_Control_Color_TextShadow_Select;			
				.TextShadow_Disable					=	GFC_Control_Color_TextShadow_Disable;			
				.TextShadow_DisableSelect			=	GFC_Control_Color_TextShadow_DisableSelect;			
			}
		}

		with .Combine								
		{										
			with .ViewItem
			{
				.Inner_Default						=	GFC_Control_Combine_Inner_Default;
				.Inner_Rollover						=	GFC_Control_Combine_Inner_Select;
				.Inner_Select						=	GFC_Control_Combine_Inner_Select;
				.Inner_Disable						=	GFC_Control_Combine_Inner_Disable;

				.Text_Default_Dest					=	GFC_Control_Combine_Text_Default_Dest;
				.Text_Default_Factor				=	GFC_Control_Combine_Text_Default_Factor;
				.Text_Rollover_Dest					=	GFC_Control_Combine_Text_Select_Dest;
				.Text_Rollover_Factor				=	GFC_Control_Combine_Text_Select_Factor;
				.Text_Select_Dest					=	GFC_Control_Combine_Text_Select_Dest;
				.Text_Select_Factor					=	GFC_Control_Combine_Text_Select_Factor;
				.Text_Disable_Dest					=	GFC_Control_Combine_Text_Default_Dest;
				.Text_Disable_Factor				=	GFC_Control_Combine_Text_Default_Factor;

				.TextShadow_Default_Dest			=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Default_Dest;
				.TextShadow_Default_Factor			=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Default_Factor;
				.TextShadow_Rollover_Dest			=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Select_Dest;
				.TextShadow_Rollover_Factor			=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Select_Factor;
				.TextShadow_Select_Dest				=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Select_Dest;
				.TextShadow_Select_Factor			=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Select_Factor;
				.TextShadow_Disable_Dest			=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Disable_Dest;
				.TextShadow_Disable_Factor			=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Disable_Factor;

				.Image_Default_Dest					=	GFC_Control_Combine_Image_Default_Dest;
				.Image_Default_Factor				=	GFC_Control_Combine_Image_Default_Factor;
				.Image_Rollover_Dest				=	GFC_Control_Combine_Image_Select_Dest;
				.Image_Rollover_Factor				=	GFC_Control_Combine_Image_Select_Factor;
				.Image_Select_Dest					=	GFC_Control_Combine_Image_Select_Dest;
				.Image_Select_Factor				=	GFC_Control_Combine_Image_Select_Factor;
				.Image_Disable_Dest					=	GFC_Control_Combine_Image_Disable_Dest;
				.Image_Disable_Factor				=	GFC_Control_Combine_Image_Disable_Factor;
			}
			with .PopupItem
			{
				.Inner_Default						=	GFC_Control_Combine_Inner_Default;
				.Inner_Select						=	GFC_Control_Combine_Inner_Select;
				.Inner_Disable						=	GFC_Control_Combine_Inner_Disable;
				.Inner_DisableSelect				=	GFC_Control_Combine_Inner_DisableSelect;

				.Text_Default_Dest					=	GFC_Control_Combine_Text_Default_Dest;
				.Text_Default_Factor				=	GFC_Control_Combine_Text_Default_Factor;
				.Text_Select_Dest					=	GFC_Control_Combine_Text_Select_Dest;
				.Text_Select_Factor					=	GFC_Control_Combine_Text_Select_Factor;
				.Text_Disable_Dest					=	GFC_Control_Combine_Text_Disable_Dest;
				.Text_Disable_Factor				=	GFC_Control_Combine_Text_Disable_Factor;
				.Text_DisableSelect_Dest			=	GFC_Control_Combine_Text_DisableSelect_Dest;
				.Text_DisableSelect_Factor			=	GFC_Control_Combine_Text_DisableSelect_Factor;

				.TextShadow_Default_Dest			=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Default_Dest;
				.TextShadow_Default_Factor			=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Default_Factor;
				.TextShadow_Select_Dest				=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Select_Dest;
				.TextShadow_Select_Factor			=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Select_Factor;
				.TextShadow_Disable_Dest			=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Disable_Dest;
				.TextShadow_Disable_Factor			=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Disable_Factor;
				.TextShadow_DisableSelect_Dest		=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_DisableSelect_Dest;
				.TextShadow_DisableSelect_Factor	=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_DisableSelect_Factor;

				.Image_Default_Dest					=	GFC_Control_Combine_Image_Default_Dest;
				.Image_Default_Factor				=	GFC_Control_Combine_Image_Default_Factor;
				.Image_Select_Dest					=	GFC_Control_Combine_Image_Select_Dest;
				.Image_Select_Factor				=	GFC_Control_Combine_Image_Select_Factor;
				.Image_Disable_Dest					=	GFC_Control_Combine_Image_Disable_Dest;
				.Image_Disable_Factor				=	GFC_Control_Combine_Image_Disable_Factor;
				.Image_DisableSelect_Dest			=	GFC_Control_Combine_Image_DisableSelect_Dest;
				.Image_DisableSelect_Factor			=	GFC_Control_Combine_Image_DisableSelect_Factor;
			}
		}

		// Fonts
		with .Font
		{
			.Default							=	GFC_Control_Font_Normal;
			.Select								=	GFC_Control_Font_Normal;
		}


		// ******* Initialize all the Bitmap theme Button properties to avoid inheritance problems

		with GFC_CtrlTheme_Bitmap_Control_ComboBox_Skin
		{
			.ViewItem_Default						=	0;
			.ViewItem_Rollover 						=	0;
			.ViewItem_Select 						=	0;
			.ViewItem_SelectRollover				=	0;
			.ViewItem_Popupselect 					=	0;
			.ViewItem_Disable 						=	0;
													
			.EditItem_Default 						=	0;
			.EditItem_Rollover 						=	0;
			.EditItem_Select 						=	0;
			.EditItem_SelectRollover				=	0;
			.EditItem_Popupselect 					=	0;
			.EditItem_Disable 						=	0;
												
			.PopupItem_Default 						=	0;
			.PopupItem_Select 						=	0;
			.PopupItem_Disable 						=	0;
			.PopupItem_DisableSelect				=	0;
		}

		map GFC_Control			=	GFC_Control_DefaultControl_Style;
	}	// end GFC_Control_DefaultComboBox_Style

	

// *** Popup Button style

style SF_CtrlTheme_FreeRealms_Control_ComboBox_Standard_PopupButton_Style
{
	GFC_Control_Renderer_Control				=	GFC_CtrlTheme_Bitmap_Control_Button_Renderer_ControlStandard;
	
	// No content offset
	GFC_Control_Button_Flag_DownOffset			=	GFlags(GButtonCtrl, GFC_CF_BUTTON_DOWNOFFSET_CONTENT);
	GFC_Control_Button_Size_DownOffset_Content	=	GPoint(0,0);
	GFC_Control_Button_Size_Default				=	GSize(20,26);

	with GFC_CtrlTheme_Bitmap_Control_Button_Skin
	{
		.Default
		{
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ComboboxButton.tga", HVGrid, 1, 5, 0, 0);
				Margin			= GRectMargin(2,12,10,12);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
				Image			= GBitmap("FreeRealms/FR_ComboboxButton.tga", HVGrid, 1, 5, 0, 1);
				Margin			= GRectMargin(2,12,10,12);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
				Image			= GBitmap("FreeRealms/FR_ComboboxButton.tga", HVGrid, 1, 5, 0, 2);
				Margin			= GRectMargin(2,12,10,12);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
				Image			= GBitmap("FreeRealms/FR_ComboboxButton.tga", HVGrid, 1, 5, 0, 3);
				Margin			= GRectMargin(2,12,10,12);
			}
			layer
			{
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Glyphs;
				Center			= GBitmap("FreeRealms/FR_ComboboxButton.tga", HVGrid, 1, 5, 0, 4);
			}
		}					
		.Rollover			
		{					
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ComboboxButton.tga", HVGrid, 1, 5, 0, 0);
				Margin			= GRectMargin(2,12,10,12);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
				Image			= GBitmap("FreeRealms/FR_ComboboxButton.tga", HVGrid, 1, 5, 0, 1);
				Margin			= GRectMargin(2,12,10,12);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
				Image			= GBitmap("FreeRealms/FR_ComboboxButton.tga", HVGrid, 1, 5, 0, 2);
				Margin			= GRectMargin(2,12,10,12);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
				Image			= GBitmap("FreeRealms/FR_ComboboxButton.tga", HVGrid, 1, 5, 0, 3);
				Margin			= GRectMargin(2,12,10,12);
			}
			layer
			{
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Glyphs;
				Center			= GBitmap("FreeRealms/FR_ComboboxButton.tga", HVGrid, 1, 5, 0, 4);
			}
		}							
		.Press						
		{							
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
				Image			= GBitmap("FreeRealms/FR_ComboboxButton.tga", HVGrid, 1, 5, 0, 1);
				Margin			= GRectMargin(2,12,10,12);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
				Image			= GBitmap("FreeRealms/FR_ComboboxButton.tga", HVGrid, 1, 5, 0, 2);
				Margin			= GRectMargin(2,12,10,12);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
				Image			= GBitmap("FreeRealms/FR_ComboboxButton.tga", HVGrid, 1, 5, 0, 3);
				Margin			= GRectMargin(2,12,10,12);
			}
			layer
			{
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Glyphs;
				Center			= GBitmap("FreeRealms/FR_ComboboxButton.tga", HVGrid, 1, 5, 0, 4);
			}
		}							
		.Disable					
		{							
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
				Image			= GBitmap("FreeRealms/FR_ComboboxButton.tga", HVGrid, 1, 5, 0, 1);
				Margin			= GRectMargin(2,12,10,12);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
				Image			= GBitmap("FreeRealms/FR_ComboboxButton.tga", HVGrid, 1, 5, 0, 2);
				Margin			= GRectMargin(2,12,10,12);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
				Image			= GBitmap("FreeRealms/FR_ComboboxButton.tga", HVGrid, 1, 5, 0, 3);
				Margin			= GRectMargin(2,12,10,12);
			}
			layer
			{
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Glyphs;
				Center			= GBitmap("FreeRealms/FR_ComboboxButton.tga", HVGrid, 1, 5, 0, 4);
			}
		}						
									
		.Toggle					=	.Rollover;
		.TogglePress			=	.Press;
			
	}

	map GFC_CtrlTheme_Bitmap_Control_Button		=	GFC_Control_DefaultButton_Style;
	map GFC_Control								=	GFC_Control_DefaultButton_Style;
}


// *** Popup Button Flat style

style SF_CtrlTheme_FreeRealms_Control_ComboBox_Flat_PopupButton_Style
{
	GFC_Control_Renderer_Control				=	GFC_CtrlTheme_Bitmap_Control_Button_Renderer_ControlStandard;
	
	// No content offset
	GFC_Control_Button_Flag_DownOffset			=	GFlags(GButtonCtrl, GFC_CF_BUTTON_DOWNOFFSET_CONTENT);
	GFC_Control_Button_Size_DownOffset_Content	=	GPoint(0,0);
	GFC_Control_Button_Size_Default				=	GSize(18,24);

	with GFC_CtrlTheme_Bitmap_Control_Button_Skin
	{
		.Default
		{
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ComboFlatButton.tga", HVGrid, 1, 5, 0, 0);
				Margin			= GRectMargin(5,11,7,11);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
				Image			= GBitmap("FreeRealms/FR_ComboFlatButton.tga", HVGrid, 1, 5, 0, 1);
				Margin			= GRectMargin(5,11,7,11);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
				Image			= GBitmap("FreeRealms/FR_ComboFlatButton.tga", HVGrid, 1, 5, 0, 2);
				Margin			= GRectMargin(5,11,7,11);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
				Image			= GBitmap("FreeRealms/FR_ComboFlatButton.tga", HVGrid, 1, 5, 0, 3);
				Margin			= GRectMargin(5,11,7,11);
			}
			layer
			{
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Glyphs;
				Center			= GBitmap("FreeRealms/FR_ComboFlatButton.tga", HVGrid, 1, 5, 0, 4);
			}
		}					
		.Rollover			
		{					
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ComboFlatButton.tga", HVGrid, 1, 5, 0, 0);
				Margin			= GRectMargin(5,11,7,11);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
				Image			= GBitmap("FreeRealms/FR_ComboFlatButton.tga", HVGrid, 1, 5, 0, 1);
				Margin			= GRectMargin(5,11,7,11);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
				Image			= GBitmap("FreeRealms/FR_ComboFlatButton.tga", HVGrid, 1, 5, 0, 2);
				Margin			= GRectMargin(5,11,7,11);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
				Image			= GBitmap("FreeRealms/FR_ComboFlatButton.tga", HVGrid, 1, 5, 0, 3);
				Margin			= GRectMargin(5,11,7,11);
			}
			layer
			{
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Glyphs;
				Center			= GBitmap("FreeRealms/FR_ComboFlatButton.tga", HVGrid, 1, 5, 0, 4);
			}
		}							
		.Press						
		{							
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
				Image			= GBitmap("FreeRealms/FR_ComboFlatButton.tga", HVGrid, 1, 5, 0, 1);
				Margin			= GRectMargin(5,11,7,11);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
				Image			= GBitmap("FreeRealms/FR_ComboFlatButton.tga", HVGrid, 1, 5, 0, 2);
				Margin			= GRectMargin(5,11,7,11);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
				Image			= GBitmap("FreeRealms/FR_ComboFlatButton.tga", HVGrid, 1, 5, 0, 3);
				Margin			= GRectMargin(5,11,7,11);
			}
			layer
			{
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Glyphs;
				Center			= GBitmap("FreeRealms/FR_ComboFlatButton.tga", HVGrid, 1, 5, 0, 4);
			}
		}							
		.Disable					
		{							
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
				Image			= GBitmap("FreeRealms/FR_ComboFlatButton.tga", HVGrid, 1, 5, 0, 1);
				Margin			= GRectMargin(5,11,7,11);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
				Image			= GBitmap("FreeRealms/FR_ComboFlatButton.tga", HVGrid, 1, 5, 0, 2);
				Margin			= GRectMargin(5,11,7,11);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
				Image			= GBitmap("FreeRealms/FR_ComboFlatButton.tga", HVGrid, 1, 5, 0, 3);
				Margin			= GRectMargin(5,11,7,11);
			}
			layer
			{
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Glyphs;
				Center			= GBitmap("FreeRealms/FR_ComboFlatButton.tga", HVGrid, 1, 5, 0, 4);
			}
		}						
									
		.Toggle					=	.Rollover;
		.TogglePress			=	.Press;
			
	}

	map GFC_CtrlTheme_Bitmap_Control_Button		=	GFC_Control_DefaultButton_Style;
	map GFC_Control								=	GFC_Control_DefaultButton_Style;
}


// Drop down combo-box border
style SF_CtrlTheme_FreeRealms_Control_ComboBox_Standard_PopupBoxTableBorder_Style
{
	GFC_Control_Flag_RegionClipParent				=	GFlags(GCtrl, GFC_CF_REGIONCLIP_PARENT);
	GFC_Control_Flag_Mask_InvalidateControl			=	GFlags(GCtrl, GFC_CF_TOPLAYER);
	
	GFC_Control_Border_Size_Margin					=	GRectMargin(1,1,1,3);

	with GFC_CtrlTheme_Bitmap_Control_Border_Skin
	{
		.Full_Default
		{
			layer 
			{
				LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
				FactorCombine	=	GColorCombine(Modulate,Source);
				FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			=	GBitmap("FreeRealms/FR_Border.tga", HVGrid, 2, 3, 1, 1);
				Margin			=	GRectMargin(1,1,1,3);
			}
			layer 
			{
				LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
				DestCombine		=	GColorCombine(BlendSource,Disable);
				FactorCombine	=	GColorCombine(Modulate,Modulate);
				FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			=	GBitmap("FreeRealms/FR_Border.tga", HVGrid, 2, 3, 1, 1);
				Margin			=	GRectMargin(1,1,1,3);
			}
			layer
			{
				LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		=	GColorCombine(RevSubtract,Disable);
				FactorCombine	=	GColorCombine(Modulate,Source);
				FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			=	GBitmap("FreeRealms/FR_Border.tga", HVGrid, 2, 3, 1, 0);
				Margin			=	GRectMargin(4,4,4,4);
			}
			layer 
			{
				LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		=	GColorCombine(Add,Disable);
				FactorCombine	=	GColorCombine(Modulate,Source);
				FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_Outline;
				Image			=	GBitmap("FreeRealms/FR_Border.tga", HVGrid, 2, 3, 1, 2);
				Margin			=	GRectMargin(4,4,4,4);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_TOPLAYER, GFC_BITMAPSKIN_NOHITTEST, GFC_BITMAPSKIN_CENTER_SCALE);
				DestCombine		= GColorCombine(Add, Source);
				FactorCombine	= GColorCombine(Modulate, Disable);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_BigShine;
				Image			= GBitmap("FreeRealms/FR_BigShine.tga", Vertical, 1, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_TOPLAYER, GFC_BITMAPSKIN_NOHITTEST, GFC_BITMAPSKIN_CENTER_TILE);
				DestCombine		= GColorCombine(Add, Source);
				FactorCombine	= GColorCombine(Modulate, Disable);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_BigLine;
				Image			= GBitmap("FreeRealms/FR_BigLine.tga", Vertical, 1, 0);
				Margin			= GRectMargin(0,0,0,0);	
			}
		}
		.Full_Disable			=	.Full_Default;
		.Full_Inactive			=	.Full_Default;
		.Full_InactiveDisable	=	.Full_Disable;
		.Full_Winoff			=	.Full_Default;
		.Full_WinoffDisable		=	.Full_Disable;
	}

	map GFC_CtrlTheme_Bitmap_Control_Border		=	GFC_Control_DefaultBorder_Style;
	map GFC_Control								=	GFC_Control_DefaultBorder_Style;
}

// Create a new button control styles

// Up - button style
style SF_CtrlTheme_FreeRealms_Control_ComboBox_PopupBox_Scroll_UpButton_Style
{
	GFC_Control_Renderer_Control			=	GFC_CtrlTheme_Bitmap_Control_Button_Renderer_ControlStandard;		

	GFC_Control_Button_Size_Default			=	GSize(18,18);

	with GFC_CtrlTheme_Bitmap_Control_Button_Skin
	{
		.Default
		{
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate,Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 1);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 3);
				Margin			= GRectMargin(0,0,0,0);
			}
		}
		.Rollover
		{
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate,Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 1);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 3);
				Margin			= GRectMargin(0,0,0,0);
			}
		}
		.Press
		{
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate,Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 1);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 3);
				Margin			= GRectMargin(0,0,0,0);
			}
		}
		.Disable
		{
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate,Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadowDis;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadowDis;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 1);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 3);
				Margin			= GRectMargin(0,0,0,0);
			}
		}			
	}

	map SF_CtrlTheme_FreeRealms_Control					= GFC_Control_DefaultButton_Style;
	map GFC_CtrlTheme_Bitmap_Control_Button					= GFC_Control_DefaultButton_Style;
	map GFC_Control											= GFC_Control_DefaultButton_Style;
}

// Down - button style
style SF_CtrlTheme_FreeRealms_Control_ComboBox_PopupBox_Scroll_DownButton_Style
{
	GFC_Control_Renderer_Control			=	GFC_CtrlTheme_Bitmap_Control_Button_Renderer_ControlStandard;

	GFC_Control_Button_Size_Default			=	GSize(18,18);

	with GFC_CtrlTheme_Bitmap_Control_Button_Skin
	{
		.Default
		{
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate,Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 1);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 3);
				Margin			= GRectMargin(0,0,0,0);
			}
		}
		.Rollover
		{
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate,Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 1);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 3);
				Margin			= GRectMargin(0,0,0,0);
			}
		}
		.Press
		{
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate,Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 1);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 3);
				Margin			= GRectMargin(0,0,0,0);
			}
		}
		.Disable
		{
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate,Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadowDis;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadowDis;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 1);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 3);
				Margin			= GRectMargin(0,0,0,0);
			}
		}			
	}

	map SF_CtrlTheme_FreeRealms_Control					= GFC_Control_DefaultButton_Style;
	map GFC_CtrlTheme_Bitmap_Control_Button					= GFC_Control_DefaultButton_Style;
	map GFC_Control											= GFC_Control_DefaultButton_Style;
}

// Left - button style
style SF_CtrlTheme_FreeRealms_Control_ComboBox_PopupBox_Scroll_LeftButton_Style
{
	GFC_Control_Renderer_Control			=	GFC_CtrlTheme_Bitmap_Control_Button_Renderer_ControlStandard;		

	GFC_Control_Button_Size_Default			=	GSize(18,18);

	with GFC_CtrlTheme_Bitmap_Control_Button_Skin
	{
		.Default
		{
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate,Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 1);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 3);
				Margin			= GRectMargin(0,0,0,0);
			}
		}
		.Rollover
		{
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate,Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 1);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 3);
				Margin			= GRectMargin(0,0,0,0);
			}
		}
		.Press
		{
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate,Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 1);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 3);
				Margin			= GRectMargin(0,0,0,0);
			}
		}
		.Disable
		{
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate,Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadowDis;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadowDis;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 1);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 3);
				Margin			= GRectMargin(0,0,0,0);
			}
		}			
	}

	map SF_CtrlTheme_FreeRealms_Control					= GFC_Control_DefaultButton_Style;
	map GFC_CtrlTheme_Bitmap_Control_Button					= GFC_Control_DefaultButton_Style;
	map GFC_Control											= GFC_Control_DefaultButton_Style;
}

// Right - button style
style SF_CtrlTheme_FreeRealms_Control_ComboBox_PopupBox_Scroll_RightButton_Style
{
	GFC_Control_Renderer_Control			=	GFC_CtrlTheme_Bitmap_Control_Button_Renderer_ControlStandard;
	
	GFC_Control_Button_Size_Default			=	GSize(18,18);

	with GFC_CtrlTheme_Bitmap_Control_Button_Skin
	{
		.Default
		{
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate,Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 1);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 3);
				Margin			= GRectMargin(0,0,0,0);
			}
		}
		.Rollover
		{
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate,Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 1);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 3);
				Margin			= GRectMargin(0,0,0,0);
			}
		}
		.Press
		{
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate,Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 1);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 3);
				Margin			= GRectMargin(0,0,0,0);
			}
		}
		.Disable
		{
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate,Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(RevSubtract,Disable);
				FactorCombine	= GColorCombine(Modulate,Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadowDis;
				Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadowDis;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 1);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 2);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
				Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 3);
				Margin			= GRectMargin(0,0,0,0);
			}
		}
	}

	map SF_CtrlTheme_FreeRealms_Control					= GFC_Control_DefaultButton_Style;
	map GFC_CtrlTheme_Bitmap_Control_Button					= GFC_Control_DefaultButton_Style;
	map GFC_Control											= GFC_Control_DefaultButton_Style;
}


// ** Normal Scroll bar style

style SF_CtrlTheme_FreeRealms_Control_ComboBox_PopupBox_Scroll_Style
{

	with GFC_Control_Scroll_StyleId
	{
		.UpButton				=	GPropertyId(SF_CtrlTheme_FreeRealms_Control_ComboBox_PopupBox_Scroll_UpButton_Style);
		.DownButton				=	GPropertyId(SF_CtrlTheme_FreeRealms_Control_ComboBox_PopupBox_Scroll_DownButton_Style);
		.LeftButton				=	GPropertyId(SF_CtrlTheme_FreeRealms_Control_ComboBox_PopupBox_Scroll_LeftButton_Style);
		.RightButton			=	GPropertyId(SF_CtrlTheme_FreeRealms_Control_ComboBox_PopupBox_Scroll_RightButton_Style);
	}
	
	// Scroll shaft skins		
	with GFC_CtrlTheme_Bitmap_Control_Scroll_Skin_HShaft
		{
			.Default
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
					FactorCombine	= GColorCombine(Modulate,Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
					Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate,Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
					Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(RevSubtract,Disable);
					FactorCombine	= GColorCombine(Modulate,Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
					Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
			}
	
			.Rollover = .Default;
	
			.Press
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
					FactorCombine	= GColorCombine(Modulate,Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
					Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate,Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
					Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(RevSubtract,Disable);
					FactorCombine	= GColorCombine(Modulate,Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadowDis;
					Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
			}
			.Disable
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
					FactorCombine	= GColorCombine(Modulate,Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
					Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate,Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
					Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(RevSubtract,Disable);
					FactorCombine	= GColorCombine(Modulate,Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadowDis;
					Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
			}
			.Winoff					= .Default;
			.WinoffPress			= .Press;
			.WinoffRollover			= .Rollover;
			.WinoffDisable			= .Disable;
		}
	
	with GFC_CtrlTheme_Bitmap_Control_Scroll_Skin_VShaft
		{
			.Default
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
					FactorCombine	= GColorCombine(Modulate,Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
					Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate,Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
					Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(RevSubtract,Disable);
					FactorCombine	= GColorCombine(Modulate,Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
					Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
			}
	
			.Rollover				= .Default;
				
			.Press
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
					FactorCombine	= GColorCombine(Modulate,Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
					Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate,Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
					Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(RevSubtract,Disable);
					FactorCombine	= GColorCombine(Modulate,Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadowDis;
					Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
			}
			.Disable
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
					FactorCombine	= GColorCombine(Modulate,Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
					Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate,Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
					Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(RevSubtract,Disable);
					FactorCombine	= GColorCombine(Modulate,Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadowDis;
					Image			= GBitmap("FreeRealms/FR_ScrollTrack.tga", HVGrid, 1, 1, 0, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
			}	
			.Winoff					= .Default;
			.WinoffPress			= .Press;
			.WinoffRollover			= .Rollover;
			.WinoffDisable			= .Disable;
		}						

	map SF_CtrlTheme_FreeRealms_Control					= GFC_Control_StandardScroll_Style;
	map GFC_CtrlTheme_Bitmap_Control_Scroll					= GFC_Control_StandardScroll_Style;
	map GFC_Control											= GFC_Control_StandardScroll_Style;
}

style SF_CtrlTheme_FreeRealms_Control_ComboBox_Standard_PopupBoxTable_Style
{
	GFC_Control_Flag_Mask_InvalidateControl			=	GFlags(GCtrl, GFC_CF_TOPLAYER);
	GFC_Control_Flag_RegionClip						=	GFlags(GCtrl, GFC_CF_REGIONCLIP);
	GFC_Control_Flag_NoExternalWindow				=	GFlags(GCtrl, GFC_CF_NOEXTERNALWINDOW);
	GFC_Control_Flag_SolidBackground				=	0;	//GFlags(GCtrl, GFC_CF_SOLIDBACKGROUND);
	
	GFC_Control_Table_Flag_NoInnerFill				=	0;	//GFlags(GCtrl, GFC_CF_NOINNERFILL);
	GFC_Control_Table_Flag_NoInnerBorder			=	GFlags(GTableCtrl, GFC_CF_TABLE_NOINNERBORDER);
	GFC_Control_Table_Flag_NoBorder					=	0;	//GFlags(GTableCtrl, GFC_CF_TABLE_NOBORDER);

	GFC_Control_Table_StyleId_OuterBorder  			=	GPropertyId(SF_CtrlTheme_FreeRealms_Control_ComboBox_Standard_PopupBoxTableBorder_Style);
	GFC_Control_Table_StyleId_HScroll				=	GPropertyId(SF_CtrlTheme_FreeRealms_Control_ComboBox_PopupBox_Scroll_Style);
	GFC_Control_Table_StyleId_VScroll				=	GPropertyId(SF_CtrlTheme_FreeRealms_Control_ComboBox_PopupBox_Scroll_Style);

	GFC_Control_Table_Size_Scroll					=	GSize(18, 18);

	with GFC_CtrlTheme_Bitmap_Control_Table_Skin_Inner
	{
		.Default
		{
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_REGION);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_MenuBG.tga", HVGrid, 1, 2, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
				DestCombine		= GColorCombine(BlendSource,Disable);
				FactorCombine	= GColorCombine(Modulate, Modulate);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Background;
				Image			= GBitmap("FreeRealms/FR_MenuBG.tga", HVGrid, 1, 2, 0, 0);
				Margin			= GRectMargin(0,0,0,0);
			}
/*			
			layer
			{
				LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_FILL,
														    GFC_BITMAPSKIN_BACKCAPS_REGION);
				FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_Background;
			}
			layer
			{
				LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_FILL,
														    GFC_BITMAPSKIN_BACKCAPS_PARTIAL);
				DestCombine		=	GColorCombine(BlendSource, Disable);
				CenterColor		=	SF_CtrlTheme_FreeRealms_Control_Color_Background;
			}
*/
		}					
		.Inactive				=	.Default;
	}
	

	map SF_CtrlTheme_FreeRealms_Control						=	GFC_Control_DefaultTable_Style;
	map GFC_CtrlTheme_Bitmap_Control_Table					=	GFC_Control_DefaultTable_Style;
	map GFC_Control											=	GFC_Control_DefaultTable_Style;
}


// Combo-box border
style SF_CtrlTheme_FreeRealms_Control_ComboBox_Standard_Border_Style
{
	GFC_Control_Flag_Mask_InvalidateControl			=	GFlags(GCtrl, GFC_CF_ACTIVE, GFC_CF_DISABLED, GFC_CF_TRANSPARENT, GFC_CF_TOPLAYER);
	GFC_Control_Border_Size_Margin					=	GRectMargin(0,0,0,0);

	with GFC_CtrlTheme_Bitmap_Control_Border_Skin
	{
		.Full_Default
		{
			layer
			{
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
				Image			= GBitmap("FreeRealms/FR_ComboboxFocus.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(9,12,9,12);
			}
		}
		.Full_Disable
		{
			layer {
				LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
				DestCombine		= GColorCombine(Add,Disable);
				FactorCombine	= GColorCombine(Modulate, Source);
				FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
				Image			= GBitmap("FreeRealms/FR_ComboboxFocus.tga", HVGrid, 1, 1, 0, 0);
				Margin			= GRectMargin(9,12,9,12);
			}				
		}					
		.Full_Inactive			=	SF_CtrlTheme_FreeRealms_Control_Skin_Blank;
		.Full_InactiveDisable	=	SF_CtrlTheme_FreeRealms_Control_Skin_Blank;
		.Full_Winoff			=	.Full_Inactive;
		.Full_WinoffDisable		=	.Full_InactiveDisable;
	}

	map SF_CtrlTheme_FreeRealms_Control				=	GFC_Control_DefaultBorder_Style;
	map GFC_CtrlTheme_Bitmap_Control_Border				=	GFC_Control_DefaultBorder_Style;
	map GFC_Control										=	GFC_Control_DefaultBorder_Style;
}


// *** Normal ComboBox style

	GFC_Control_StandardComboBox_Style
	{

		with .StyleId
		{
			.OuterBorder		=	GPropertyId(SF_CtrlTheme_FreeRealms_Control_ComboBox_Standard_Border_Style);
			.InnerBorder		=	GPropertyId(GFC_Control_EmptyBorder_Style);
			.ItemEdit			=	GPropertyId(GFC_Control_ClearEdit_Style);
			.PopupButton		=	GPropertyId(SF_CtrlTheme_FreeRealms_Control_ComboBox_Standard_PopupButton_Style);
			.PopupBoxTable		=	GPropertyId(SF_CtrlTheme_FreeRealms_Control_ComboBox_Standard_PopupBoxTable_Style);
		}

		
		// **NOTE: This is the combobox background.**
		with GFC_CtrlTheme_Bitmap_Control_ComboBox_Skin
		{

			with .ViewItem
			{
				.Default
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Combobox.tga", HVGrid, 1, 5, 0, 0);
						Margin			= GRectMargin(10,12,2,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Combobox.tga", HVGrid, 1, 5, 0, 1);
						Margin			= GRectMargin(10,12,2,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
						Image			= GBitmap("FreeRealms/FR_Combobox.tga", HVGrid, 1, 5, 0, 2);
						Margin			= GRectMargin(10,12,2,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Combobox.tga", HVGrid, 1, 5, 0, 3);
						Margin			= GRectMargin(10,12,2,12);
					}
				}
				.Rollover
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Combobox.tga", HVGrid, 1, 5, 0, 0);
						Margin			= GRectMargin(10,12,2,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
						Image			= GBitmap("FreeRealms/FR_Combobox.tga", HVGrid, 1, 5, 0, 1);
						Margin			= GRectMargin(10,12,2,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
						Image			= GBitmap("FreeRealms/FR_Combobox.tga", HVGrid, 1, 5, 0, 2);
						Margin			= GRectMargin(10,12,2,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Combobox.tga", HVGrid, 1, 5, 0, 3);
						Margin			= GRectMargin(10,12,2,12);
					}					
				}						
				.Select					=	.Default;
				.SelectRollover			=	.Rollover;
				.Popupselect			=	.Rollover;
				.Disable					
				{						
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Combobox.tga", HVGrid, 1, 5, 0, 1);
						Margin			= GRectMargin(10,12,2,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
						Image			= GBitmap("FreeRealms/FR_Combobox.tga", HVGrid, 1, 5, 0, 2);
						Margin			= GRectMargin(10,12,2,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_Combobox.tga", HVGrid, 1, 5, 0, 3);
						Margin			= GRectMargin(10,12,2,12);
					}
				}
			}
			
			with .EditItem
			{
				.Default 				=	GFC_CtrlTheme_Bitmap_Control_ComboBox_Skin_ViewItem_Default;
				.Rollover 				=	GFC_CtrlTheme_Bitmap_Control_ComboBox_Skin_ViewItem_Rollover;
				.Select 				=	GFC_CtrlTheme_Bitmap_Control_ComboBox_Skin_ViewItem_Select;
				.Popupselect 			=	GFC_CtrlTheme_Bitmap_Control_ComboBox_Skin_ViewItem_Popupselect;
				.Disable 				=	GFC_CtrlTheme_Bitmap_Control_ComboBox_Skin_ViewItem_Disable;
			}

			// Popup item backgrounds
			//NOTE: THESE COLORS ARE OVERRIDDEN BY TABLE.
			with .PopupItem
			{
				.Default
				{
					layer 
					{
						LayerFlags = GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_FILL, GFC_BITMAPSKIN_NOTVISIBLE);
					}
				}
				.Select
				{
					layer {
						LayerFlags						=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE);
						DestCombine						=	GColorCombine(Add,Disable);
						FactorCombine					=	GColorCombine(Modulate,Source);
						FactorColor						=	GFC_Control_ComboBox_Color_PopupItem_Inner_Select;
						Image							=	GBitmap("FreeRealms/FR_White.tga");
						Margin							=	GRectMargin(0,0,0,0);
					}
				}
				.Disable				=	.Default;	
				.DisableSelect			=	.Default;
			}
		}

		map SF_CtrlTheme_FreeRealms_Control_ComboBox					=	GFC_Control_DefaultComboBox_Style;
		map GFC_CtrlTheme_Bitmap_Control_ComboBox						=	GFC_Control_DefaultComboBox_Style;
		map GFC_Control												=	GFC_Control_DefaultComboBox_Style;
	}																	
																			
	GFC_Control_EditComboBox_Style											
	{
		.Flag_Popup_VStyle				=	GFlags(GComboBoxCtrl, GFC_CF_COMBOBOX_POPUP_DOWN);

		with .Color								
		{									
			.ViewItem_Text_Default					=	GFC_Control_Color_Text_Default;
			.ViewItem_Text_Rollover					=	GFC_Control_Color_Text_Default;
			.ViewItem_Text_Select					=	GFC_Control_Color_Text_Default;									
			.ViewItem_Text_Disable					=	GFC_Control_Color_Text_Disable;
		}
		
		with .Combine								
		{
			.ViewItem_Text_Default_Dest				=	GFC_Control_Combine_Text_Default_Dest;
			.ViewItem_Text_Default_Factor			=	GFC_Control_Combine_Text_Default_Factor;
			.ViewItem_Text_Rollover_Dest			=	GFC_Control_Combine_Text_Select_Dest;
			.ViewItem_Text_Rollover_Factor			=	GFC_Control_Combine_Text_Select_Factor;
			.ViewItem_Text_Select_Dest				=	GFC_Control_Combine_Text_Select_Dest;
			.ViewItem_Text_Select_Factor			=	GFC_Control_Combine_Text_Select_Factor;
			.ViewItem_Text_Disable_Dest				=	GFC_Control_Combine_Text_Disable_Dest;
			.ViewItem_Text_Disable_Factor			=	GFC_Control_Combine_Text_Disable_Factor;
		}

		with GFC_CtrlTheme_Bitmap_Control_ComboBox_Skin
		{
			with .ViewItem
			{
				.Default
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Combobox.tga", HVGrid, 1, 5, 0, 4);
						Margin			= GRectMargin(10,12,2,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
						Image			= GBitmap("FreeRealms/FR_Combobox.tga", HVGrid, 1, 5, 0, 3);
						Margin			= GRectMargin(10,12,2,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Combobox.tga", HVGrid, 1, 5, 0, 3);
						Margin			= GRectMargin(10,12,2,12);
					}
				}
				.Rollover				=	.Default;
				.Disable
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
						Image			= GBitmap("FreeRealms/FR_Combobox.tga", HVGrid, 1, 5, 0, 3);
						Margin			= GRectMargin(10,12,2,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_Combobox.tga", HVGrid, 1, 5, 0, 3);
						Margin			= GRectMargin(10,12,2,12);
					}
				}
			}
		}

		map SF_CtrlTheme_FreeRealms_Control_ComboBox					=	GFC_Control_StandardComboBox_Style;
		map GFC_CtrlTheme_Bitmap_Control_ComboBox						=	GFC_Control_StandardComboBox_Style;
		map GFC_Control												=	GFC_Control_StandardComboBox_Style;
	}
																			
	GFC_Control_FlatComboBox_Style											
	{																	
		
		with .Size
		{
			.EditMargin							=	GRectMargin(0,0,0,0);	
			
			.PopupMinimum						=	GSize(60,2);
			.PopupUpMargin						=	GRectMargin(0,0,0,0);
			.PopupDownMargin					=	GRectMargin(0,0,0,0);
			.PopupCenterMargin					=	GRectMargin(2,0,2,0);
			
			.PopupItem_ContentMargin			=	GRectMargin(0,0,0,-1);
			.ViewItem_ContentMargin				=	GRectMargin(3,1,3,1);

			.ItemSpace							=	10;
			.TextMinimum						=	20;
			.TextMargin							=	GRectMargin(5,4,5,4);
			
			.ImageColumn						=	20;
			.ImageMargin						=	GRectMargin(2,4,2,4);
			.ImageNoTextMargin					=	GRectMargin(2,4,2,4);
			
			.Default							=	GSize(90,24);			
		}
		
		with .StyleId
		{
			.OuterBorder		=	GPropertyId(GFC_Control_EmptyBorder_Style);
			.PopupButton		=	GPropertyId(SF_CtrlTheme_FreeRealms_Control_ComboBox_Flat_PopupButton_Style);
		}
		
		with GFC_CtrlTheme_Bitmap_Control_ComboBox_Skin
		{
			with .ViewItem
			{
				.Default
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_ComboFlat.tga", HVGrid, 1, 5, 0, 0);
						Margin			= GRectMargin(7,11,5,11);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_ComboFlat.tga", HVGrid, 1, 5, 0, 1);
						Margin			= GRectMargin(7,11,5,11);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
						Image			= GBitmap("FreeRealms/FR_ComboFlat.tga", HVGrid, 1, 5, 0, 2);
						Margin			= GRectMargin(7,11,5,11);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_ComboFlat.tga", HVGrid, 1, 5, 0, 3);
						Margin			= GRectMargin(7,11,5,11);
					}
				}
				.Rollover
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_ComboFlat.tga", HVGrid, 1, 5, 0, 0);
						Margin			= GRectMargin(7,11,5,11);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
						Image			= GBitmap("FreeRealms/FR_ComboFlat.tga", HVGrid, 1, 5, 0, 1);
						Margin			= GRectMargin(7,11,5,11);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
						Image			= GBitmap("FreeRealms/FR_ComboFlat.tga", HVGrid, 1, 5, 0, 2);
						Margin			= GRectMargin(7,11,5,11);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_ComboFlat.tga", HVGrid, 1, 5, 0, 3);
						Margin			= GRectMargin(7,11,5,11);
					}					
				}						
				.Select					=	.Default;
				.SelectRollover			=	.Rollover;
				.Popupselect			=	.Rollover;
				.Disable					
				{						
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_ComboFlat.tga", HVGrid, 1, 5, 0, 1);
						Margin			= GRectMargin(7,11,5,11);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
						Image			= GBitmap("FreeRealms/FR_ComboFlat.tga", HVGrid, 1, 5, 0, 2);
						Margin			= GRectMargin(7,11,5,11);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_ComboFlat.tga", HVGrid, 1, 5, 0, 3);
						Margin			= GRectMargin(7,11,5,11);
					}
				}
			}
		}
		map SF_CtrlTheme_FreeRealms_Control_ComboBox					=	GFC_Control_StandardComboBox_Style;
		map GFC_CtrlTheme_Bitmap_Control_ComboBox						=	GFC_Control_StandardComboBox_Style;
		map GFC_Control												=	GFC_Control_StandardComboBox_Style;
	}

}


	
