/********************************************************************** 

Filename	:	FreeRealmsTheme_Common.thm
Content		:	FreeRealms - GCtrl common control theme


Licensees may use this file in accordance with the valid Scaleform
GFC Commercial License Agreement provided with the software.

This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING 
THE WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR ANY PURPOSE.

For information regarding GFC Commercial License Agreements go to:
	online - http://www.scaleform.com/licensing.html or
	email  - sales@scaleform.com 

**********************************************************************/

// *** Control Base properties 

/*
Disable				=0,
Source				=1,			//  S 
Dest				=2,			//  D
Factor				=2,			
// Binary operations
XOr					=3,			//  D ^ S
Or					=4,			//  D | S
And					=5,			//  D & S
NotAnd				=6,			// ~D & S
AndNot				=7,			//  D & ~S
// Color blending operations
Modulate			=8,			//  D * S
Modulate2X			=9,			//  D * S * 2
Modulate4X			=10,		//  D * S * 4
Add					=11,		//  D + S
AddSmooth			=12,		//  D + S * (1-D)
AddSigned			=13,		//  D + S - 0.5
AddSigned2X			=14,		// (D + S - 0.5) * 2
AddSigned4X			=15,		// (D + S - 0.5) * 4	
Subtract			=16,		//  S - D
Subtract2X			=17,		// (S - D) * 2
Subtract4X			=18,		// (S - D) * 4
RevSubtract			=19,		//  D - S
RevSubtract2X		=20,		// (D - S) * 2
RevSubtract4X		=21,		// (D - S) * 4
BlendSource			=22,		//  D * (1-Sa) + S * Sa
BlendDest			=23,		//  D * (1-Da) + S * Da
*/


with GFC_Control
{

	// Blank control skin
	skin SF_CtrlTheme_FreeRealms_Control_Skin_Blank
	{
		layer
		{
		}
	}

	GFC_Control_DefaultControl_Style
	{	
		.Renderer_Control						=	0;
		.Update_ChildLayout						=	0;

		with .Flag
		{
			// Base control flags
			.Transparent						=	0;	//GFlags(GCtrl, GFC_CF_TRANSPARENT);
			.SolidInner							=	0;	//GFlags(GCtrl, GFC_CF_SOLIDINNER);
			.SolidBackground					=	0;	//GFlags(GCtrl, GFC_CF_SOLIDBACKGROUND);
			.RegionClip							=	0;	//GFlags(GCtrl, GFC_CF_REGIONCLIP);
			.RegionClipParent					=	0;	//GFlags(GCtrl, GFC_CF_REGIONCLIP_PARENT);
			.NoExternalWindow					=	0;	//GFlags(GCtrl, GFC_CF_NOEXTERNALWINDOW);
			.HitTest							=	0;	//GFlags(GCtrl, GFC_CF_HITTEST);
			.TopLayer							=	0;	//GFlags(GCtrl, GFC_CF_TOPLAYER);
			.TopLayerBitmap						=	0;	//GFlags(GCtrl, GFC_CF_TOPLAYERBITMAP);
			.BottomLayerBitmap					=	0;	//GFlags(GCtrl, GFC_CF_BOTTOMLAYERBITMAP);
											
			// Control flag change masks	
			.Mask_InvalidateControl				=	GFlags(GCtrl, GFC_CF_ACTIVE, GFC_CF_DISABLED, GFC_CF_TRANSPARENT, 
																  GFC_CF_TOPLAYER, GFC_CF_FORCE_ROLLOVER);

			/*
			.BlitFx_TopLayer					=	0;
			.BlitFx_BottomLayer					=	0;
			.BlitFx_HitTestLayer				=	0;
			*/
		}

		// Size
		with .Size
		{
			.ItemSpace				= 	2;
			.ListItem				=	22;
	
			// Icons
			.IconLarge				=	48;
			.IconMedium				=	32;
			.IconSmall				=	16;
				
			// Step increments
			.Step					=	10;
		}
	
		with .Layout
		{
			.Size_VSpacing						=	8;
			.Size_HSpacing						=	8;
			.Size_OuterMargin					=	GRectMargin(8,8,8,8);
		}										
													
		with .BoxLayout								
		{										
			.Size_VSpacing						=	GFC_Control_Layout_Size_VSpacing;
			.Size_HSpacing						=	GFC_Control_Layout_Size_HSpacing;
			.Size_OuterMargin					=	GFC_Control_Layout_Size_OuterMargin;
		}
	
		with .Delay
		{
			// ToolTip delays, in milliseconds
			.ToolTipShow			=	500;
			.ToolTipHide			=	2000;
		}
	
		with .Color
		{		
			with GFC_Control_Color_3DLook
			{
				.Lightest						=	GColor(255,255,255);
				.VeryLight						=	GColor(240,240,240);
				.Light							=	GColor(230,230,230);
				.Normal							=	GColor(204,204,204);
				.Dark							=	GColor(128,128,128);
				.VeryDark						=	GColor( 80, 80, 80);
				.Darkest						=	GColor(  0,  0,  0);
			}		
											
			.Surface							=	GColor(  0, 0, 0);
			.Background							=	.Surface;
			.DialogInner						=	GColor(  0,	 0,  0);
			.Info								=	GColor(  0,	 0,  0);
			.ToolTipInner						=	GColor(  0,	 0,  0);
			.ToolTipBorder						=	GColor(  0,  0,  0);
	
			.Border_Default						=	GColor(  0,	 0,  0);
			.Border_Select						=	GColor(  0,  0,  0);
			.Border_Inactive					=	GColor(  0,  0,  0);
			.Border_InactiveSelect				=	GColor(  0,  0,  0);
			.Border_Disable						=	GColor(  0,  0,  0);
			.Border_DisableSelect				=	GColor(  0,  0,  0);
	
			.Inner_Default						=	GColor( 0,0,0);
			.Inner_Select						=	GColor( 0, 0,  0);	//GColor( 96, 70,  0);
			.Inner_Inactive						=	GColor(  0,  0,  0);
			.Inner_InactiveSelect				=	GColor( 0, 0,0);
			.Inner_Disable						=	GColor(  0,  0,  0);
			.Inner_DisableSelect				=	GColor( 0 0,  0);
			
			.Image_Default						=	GColor(White);
			.Image_Select						=	GColor(White);
			.Image_Inactive						=	GColor(White);
			.Image_InactiveSelect				=	GColor(White);
			.Image_Disable						=	GColor(0,0,0,96);
			.Image_DisableSelect				=	GColor(0,0,0,96);
										
			.Text_Default						=	GColor(255,255,255,255);
			.Text_Select						=	GColor(  0, 30, 89);
			.Text_Inactive						=	GColor(255,255,255);
			.Text_InactiveSelect				=	GColor(255,255,255);
			.Text_Disable						=	GColor(255,255,255,128);
			.Text_DisableSelect					=	GColor(  0, 30, 89,128);
	
			.TextShadow_Default					=	GColor(214,184,143);
			.TextShadow_Select					=	GColor(  0,  0,  0);
			.TextShadow_Inactive				=	GColor(  0,  0,  0);
			.TextShadow_InactiveSelect			=	GColor(  0,  0,  0);
			.TextShadow_Disable					=	GColor(  0,  0,  0);
			.TextShadow_DisableSelect			=	GColor(  0,  0,  0);

			.Link_Default						=	GColor(255,235,  0);
			.Link_Select						=	GColor(255,235,  0);
			.Link_Rollover						=	GColor(255,235,  0);
			.Link_Inactive						=	GColor(255,235,  0);	
			.Link_InactiveSelect				=	GColor(255,235,  0);	
			.Link_InactiveRollover				=	GColor(255,235,  0);	
			.Link_Disable						=	GColor(255,235,  0,128);
			.Link_DisableSelect					=	GColor(  0, 30, 89,128);
			.Link_DisableRollover				=	GColor(  0, 30, 89,128);				
	
			// Theme - specific colors
			with SF_CtrlTheme_FreeRealms_Control
			{
				with .Color
				{
					//Background
					GColor	.Background				=	GColor( 59,77,111,213)	: GFC_Control_Color;
	
					//Titlebar
					GColor	.TitlebarLight1			=	GColor(204,255,255)		: GFC_Control_Color;
					GColor	.TitlebarLight2			=	GColor( 46,123,236)		: GFC_Control_Color;
					GColor	.TitlebarGlow			=	GColor(  0,158,240)		: GFC_Control_Color;
					GColor	.TitlebarGlowWinoff		=	GColor(  0, 79,120)		: GFC_Control_Color;
					
					//InBorder
					GColor	.InBorderLight1			=	GColor(255,255,255)		: GFC_Control_Color;
					GColor	.InBorderLight2			=	GColor(  0, 82, 82)		: GFC_Control_Color;
					GColor	.InBorderGlow			=	GColor( 50, 50, 20)		: GFC_Control_Color;
					GColor	.BigShine				=	GColor( 26, 42, 51)		: GFC_Control_Color;
					GColor	.BigLine				=	GColor( 26, 26, 26)		: GFC_Control_Color;
	
					GColor	.InBorderLight1Winoff	=	GColor(128,128,128)		: GFC_Control_Color;
					GColor	.InBorderLight2Winoff	=	GColor(  0, 64, 64)		: GFC_Control_Color;
					GColor	.InBorderGlowWinoff		=	GColor(  0, 37, 64)		: GFC_Control_Color;
					GColor	.BigShineWinoff			=	GColor( 13, 21, 26)		: GFC_Control_Color;
					GColor	.BigLineWinoff			=	GColor( 13, 13, 13)		: GFC_Control_Color;
	
					//Defaults
					GColor	.DropShadow				=	GColor( 51, 51, 51)		: GFC_Control_Color;
					GColor	.Surface1				=	GColor( 0, 0,0)	: GFC_Control_Color;
					GColor	.Surface2				=	GColor( 0, 0,0)		: GFC_Control_Color;
					GColor	.Outline				=	GColor(128, 71,  0)		: GFC_Control_Color;
					GColor	.SurfaceRoll1			=	GColor(0,0, 0)	: GFC_Control_Color;
					GColor	.SurfaceRoll2			=	GColor(0,0, 0)		: GFC_Control_Color;
					GColor	.SurfaceDis2			=	GColor( 37, 45, 55)		: GFC_Control_Color;
					GColor	.OutlineDis				=	GColor( 51, 51, 51)		: GFC_Control_Color;
					GColor	.OutlineFocus			=	GColor(0,0,  0)		: GFC_Control_Color;
					GColor	.ProgressChunk1			=	GColor( 0,0,  0)	: GFC_Control_Color;
					GColor	.ProgressChunk2			=	GColor( 0,0,  0)		: GFC_Control_Color;
					GColor	.DropShadowDis			=	GColor( 0, 0, 0)		: GFC_Control_Color;
					
					//Slider Fill Color
					GColor	.SliderFillColor		=	GColor(228,178,110,255)	: GFC_Control_Color;
	
					//Glyphs
					GColor	.Glyphs					=	GColor( 16, 48,112,255)	: GFC_Control_Color;
	
					//Text
					GColor	.TitlebarText			=	GColor( 255, 255, 255);			: GFC_Control_Color;
					GColor	.TitlebarTextWinoff		=	GColor( 255, 255, 255, 128);            : GFC_Control_Color;
					GColor	.TitlebarTextShadow		=	GColor( 64, 54, 42);
					GColor	.InvertText				=	GColor(  0, 30, 89)		: GFC_Control_Color;
					GColor	.TextFocus				=	GColor(0,0,  0)		: GFC_Control_Color;
	
					//Edit Caret
					GColor	.Caret					=	GColor(255,150,  0)		: GFC_Control_Color;
	
					//Table
					GColor	.Tableselect			=	GColor(200,140,  0)		: GFC_Control_Color;
					GColor	.Multiselect			=	GColor(100, 70,  0)		: GFC_Control_Color;
					GColor	.Offselect				=	GColor( 50, 30,  0)		: GFC_Control_Color;
					GColor	.InactiveMultiselect	=	GColor( 25, 35, 55)		: GFC_Control_Color;
					GColor	.InactiveOffselect		=	GColor( 15, 20, 40)		: GFC_Control_Color;
					
					//Text Glow
					GColor	.TextGlow				=	GColor( 0, 0, 0)		: GFC_Control_Color;
				
				}
			}
		}
	
		// Color combines
		with .Combine
		{
			.Surface							=	GColorCombine(BlendSource, Disable);
			.DialogInner						=	GColorCombine(BlendSource, Disable);
			.Info								=	GColorCombine(BlendSource, Disable);
			.ToolTip							=	GColorCombine(BlendSource, Disable);
	
			.Border_Default						=	GColorCombine(Add, Disable);
			.Border_Select						=	GColorCombine(Add, Disable);
			.Border_Inactive					=	GColorCombine(Add, Disable);
			.Border_InactiveSelect				=	GColorCombine(Add, Disable);
			.Border_Disable						=	GColorCombine(Add, Disable);
			.Border_DisableSelect				=	GColorCombine(Add, Disable);
	
			.Inner_Default						=	GColorCombine(BlendSource, Disable);
			.Inner_Select						=	GColorCombine(Add, Disable);
			.Inner_Inactive						=	GColorCombine(Add, Disable);
			.Inner_InactiveSelect				=	GColorCombine(Add, Disable);
			.Inner_Disable						=	GColorCombine(Add, Disable);
			.Inner_DisableSelect				=	GColorCombine(Add, Disable);
	
			.Image_Default_Dest					=	GColorCombine(BlendSource, Disable);
			.Image_Default_Factor				=	GColorCombine(Source, Source);
			.Image_Select_Dest					=	.Image_Default_Dest;
			.Image_Select_Factor				=	.Image_Default_Factor;											
			.Image_Inactive_Dest				=	.Image_Default_Dest;
			.Image_Inactive_Factor				=	.Image_Default_Factor;
			.Image_InactiveSelect_Dest			=	.Image_Default_Dest;
			.Image_InactiveSelect_Factor		=	.Image_Default_Factor;
			.Image_Disable_Dest					=	GColorCombine(BlendSource, Disable);
			.Image_Disable_Factor				=	GColorCombine(Source, Modulate);
			.Image_DisableSelect_Dest			=	GColorCombine(BlendSource, Disable);
			.Image_DisableSelect_Factor			=	GColorCombine(Source, Modulate);
										
			.Text_Default_Dest					=	GColorCombine(BlendSource, Disable);
			.Text_Default_Factor				=	GColorCombine(Factor, Source);
			.Text_Select_Dest					=	.Text_Default_Dest;
			.Text_Select_Factor					=	.Text_Default_Factor;
			.Text_Inactive_Dest					=	.Text_Default_Dest;
			.Text_Inactive_Factor				=	.Text_Default_Factor;
			.Text_InactiveSelect_Dest			=	.Text_Default_Dest;
			.Text_InactiveSelect_Factor			=	.Text_Default_Factor;
			.Text_Disable_Dest					=	GColorCombine(BlendSource, Disable);
			.Text_Disable_Factor				=	GColorCombine(Factor, Modulate);
			.Text_DisableSelect_Dest			=	.Text_Disable_Dest;
			.Text_DisableSelect_Factor			=	.Text_Disable_Factor;	
	
			.TextShadow_Default_Dest			=	GColorCombine(Add, Disable);
			.TextShadow_Default_Factor			=	GColorCombine(Modulate, Source);
			.TextShadow_Select_Dest				=	GColorCombine(Add, Disable);
			.TextShadow_Select_Factor			=	GColorCombine(Modulate, Source);
			.TextShadow_Inactive_Dest			=	GColorCombine(Add, Disable);
			.TextShadow_Inactive_Factor			=	GColorCombine(Modulate, Source);
			.TextShadow_InactiveSelect_Dest		=	GColorCombine(Add, Disable);
			.TextShadow_InactiveSelect_Factor	=	GColorCombine(Modulate, Source);
			.TextShadow_Disable_Dest			=	GColorCombine(Add, Disable);
			.TextShadow_Disable_Factor			=	GColorCombine(Modulate, Source);
			.TextShadow_DisableSelect_Dest		=	GColorCombine(Add, Disable);	
			.TextShadow_DisableSelect_Factor	=	GColorCombine(Modulate, Source);		
					
		}
	
		with .Font
		{
			// Anti-aliased font requires the Text combine
			// to be BlendSource instead of Source, which means
			// there must be an ALPHA channel in all fonts
			with SF_CtrlTheme_FreeRealms_Control_Font
			{
				GFont	.NoGlowNormal			=	GFont("FreeRealmsDemiBold",		"Regular",		10, GFlags(GFontFeature, GFC_FONT_ALPHA));
			}

			.Normal								=	GFont("FreeRealmsDemiBold",		"Regular",		18, GFlags(GFontFeature, GFC_FONT_ALPHA));
			.Bold								=	GFont("FreeRealmsDemiBold",		"Bold",			18, GFlags(GFontFeature, GFC_FONT_BOLD, GFC_FONT_ALPHA));
			.Italic								=	GFont("FreeRealmsDemiBold",		"Italic",		11, GFlags(GFontFeature, GFC_FONT_ITALIC, GFC_FONT_ALPHA));
			.BoldItalic							=	GFont("FreeRealmsDemiBold",		"Bold Italic",	11, GFlags(GFontFeature, GFC_FONT_BOLD, GFC_FONT_ITALIC, GFC_FONT_ALPHA));
			.Header								=	GFont("FreeRealmsDemiBold",		"Regular",		24, GFlags(GFontFeature, GFC_FONT_ALPHA));
			.HeaderBold							=	GFont("FreeRealmsDemiBold",		"Bold",			24, GFlags(GFontFeature, GFC_FONT_BOLD, GFC_FONT_ALPHA));
			.Footer								=	GFont("FreeRealmsDemiBold",		"Regular",		10, GFlags(GFontFeature, GFC_FONT_ALPHA));
			.FooterBold							=	GFont("FreeRealmsDemiBold",		"Bold",			10, GFlags(GFontFeature, GFC_FONT_BOLD, GFC_FONT_ALPHA));
			.Fixed								=	GFont("Courier New",	"Regular",		11, GFlags(GFontFeature, GFC_FONT_ALPHA));
			.FixedBold							=	GFont("Courier New",	"Bold",			11, GFlags(GFontFeature, GFC_FONT_BOLD, GFC_FONT_ALPHA));
		}
	
		with .Cursor
		{
			.Default							=	.Arrow;

			.Custom								=	GFC_Draw_Cursor_Custom;
			.None								=	GFC_Draw_Cursor_None;
			.Arrow								=	GFC_Draw_Cursor_Arrow;
			.ReverseArrow						=	GFC_Draw_Cursor_ReverseArrow;
			.Cross								=	GFC_Draw_Cursor_Cross;
			.No									=	GFC_Draw_Cursor_No;
			.Text								=	GFC_Draw_Cursor_Text;
			.Wait								=	GFC_Draw_Cursor_Wait;
			.Help								=	GFC_Draw_Cursor_Help;
			.Link								=	GFC_Draw_Cursor_Link;
												
			.DragNone							=	GFC_Draw_Cursor_DragNone;
			.DragCopy							=	GFC_Draw_Cursor_DragCopy;
			.DragMove							=	GFC_Draw_Cursor_DragMove;
			.DragLink							=	GFC_Draw_Cursor_DragLink;
												
			.Up									=	GFC_Draw_Cursor_Up;
			.Down								=	GFC_Draw_Cursor_Down;
			.Right								=	GFC_Draw_Cursor_Right;
			.Left								=	GFC_Draw_Cursor_Left;
												
			.VSplit								=	GFC_Draw_Cursor_VSplit;
			.HSplit								=	GFC_Draw_Cursor_HSplit;
												
			.Size_All							=	GFC_Draw_Cursor_Size_All;
			.Size_Up							=	GFC_Draw_Cursor_Size_Up;
			.Size_Down							=	GFC_Draw_Cursor_Size_Down;
			.Size_Right							=	GFC_Draw_Cursor_Size_Right;
			.Size_Left							=	GFC_Draw_Cursor_Size_Left;
			.Size_UpDown						=	GFC_Draw_Cursor_Size_UpDown;
			.Size_LeftRight						=	GFC_Draw_Cursor_Size_LeftRight;
			.Size_UpLeft						=	GFC_Draw_Cursor_Size_UpLeft;
			.Size_UpRight						=	GFC_Draw_Cursor_Size_UpRight;
			.Size_DownLeft						=	GFC_Draw_Cursor_Size_DownLeft;
			.Size_DownRight						=	GFC_Draw_Cursor_Size_DownRight;
	
			.Move_Normal						=	GFC_Draw_Cursor_Arrow;
			.Move_Vertical						=	GFC_Draw_Cursor_Arrow;
			.Move_Horizontal					=	GFC_Draw_Cursor_Arrow;
		}									
												
		with .Icon						
		{									
			.File_Unknown_Small					=	GBitmap("Icons/System/file unknown_16x16.tga");
			.File_Unknown_Medium				=	GBitmap("Icons/System/file unknown_32x32.tga");
			.File_Text_Small					=	GBitmap("Icons/System/file text_16x16.tga");
			.File_Text_Medium					=	GBitmap("Icons/System/file text_32x32.tga");
			.File_Image_Small					=	GBitmap("Icons/System/file paint_16x16.tga");
			.File_Image_Medium					=	GBitmap("Icons/System/file paint_32x32.tga");
	
			.Folder_Open_Small					=	GBitmap("Icons/System/folder open_16x16.tga");	
			.Folder_Open_Medium					=	GBitmap("Icons/System/folder open_32x32.tga");	
			.Folder_Close_Small					=	GBitmap("Icons/System/folder close_16x16.tga");	
			.Folder_Close_Medium				=	GBitmap("Icons/System/folder close_32x32.tga");
			.Folder_FilledOpen_Small			=	GBitmap("Icons/System/folder file_16x16.tga");	
			.Folder_FilledOpen_Medium			=	GBitmap("Icons/System/folder file_32x32.tga");	
			.Folder_FilledClose_Small			=	.Folder_Close_Small;
			.Folder_FilledClose_Medium			=	.Folder_Close_Medium;
											
			.New_Small							=	GBitmap("Icons/Application/new_16x16.tga");
			.New_Medium							=	GBitmap("Icons/Application/new_32x32.tga");
			.Open_Small							=	GBitmap("Icons/Application/open_16x16.tga");
			.Open_Medium						=	GBitmap("Icons/Application/open_32x32.tga");
			.Save_Small							=	GBitmap("Icons/Application/save_16x16.tga");
			.Save_Medium						=	GBitmap("Icons/Application/save_32x32.tga");
			.SaveAll_Small						=	GBitmap("Icons/Application/save all_16x16.tga");
			.SaveAll_Medium						=	GBitmap("Icons/Application/save all_32x32.tga");

			.Drive_Fixed_Small					=	GBitmap("Icons/System/drive disk_16x16.tga");
			.Drive_Fixed_Medium					=	GBitmap("Icons/System/drive disk_32x32.tga");
			.Drive_Removable_Small				=	GBitmap("Icons/System/drive remove_16x16.tga");
			.Drive_Removable_Medium				=	GBitmap("Icons/System/drive remove_32x32.tga");
			.Drive_Optical_Small				=	GBitmap("Icons/System/drive cd_16x16.tga");
			.Drive_Optical_Medium				=	GBitmap("Icons/System/drive cd_32x32.tga");
			.Drive_Network_Small				=	GBitmap("Icons/System/networks_16x16.tga");
			.Drive_Network_Medium				=	GBitmap("Icons/System/networks_32x32.tga");

			.Computer_Small						=	GBitmap("Icons/System/display_16x16.tga");
			.Computer_Medium					=	GBitmap("Icons/System/display_32x32.tga");
													
			.Undo_Small							=	GBitmap("Icons/Application/undo_16x16.tga");
			.Undo_Medium						=	GBitmap("Icons/Application/undo_32x32.tga");
			.Redo_Small							=	GBitmap("Icons/Application/redo_16x16.tga");
			.Redo_Medium						=	GBitmap("Icons/Application/redo_32x32.tga");
													
			.Cut_Small							=	GBitmap("Icons/Application/cut_16x16.tga");
			.Cut_Medium							=	GBitmap("Icons/Application/cut_32x32.tga");
			.Copy_Small							=	GBitmap("Icons/Application/copy_16x16.tga");
			.Copy_Medium						=	GBitmap("Icons/Application/copy_32x32.tga");
			.Paste_Small						=	GBitmap("Icons/Application/paste_16x16.tga");
			.Paste_Medium						=	GBitmap("Icons/Application/paste_32x32.tga");
			.Delete_Small						=	GBitmap("Icons/Application/delete_16x16.tga");
			.Delete_Medium						=	GBitmap("Icons/Application/delete_32x32.tga");

			.Dialog_Information					=	GBitmap("Icons/Dialog/info.tga");
			.Dialog_Question					=	GBitmap("Icons/Dialog/question.tga");
			.Dialog_Warning						=	GBitmap("Icons/Dialog/warning.tga");
			.Dialog_Error						=	GBitmap("Icons/Dialog/error.tga");
		}									

	} // end GFC_Control_DefaultControl_Style	

}
