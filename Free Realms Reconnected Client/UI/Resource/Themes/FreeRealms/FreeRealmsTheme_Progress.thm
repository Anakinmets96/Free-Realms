/********************************************************************** 

Filename	:	FreeRealmsTheme_SizeGrip.thm
Content		:	FreeRealms - GSizeGrip control theme


Licensees may use this file in accordance with the valid Scaleform
GFC Commercial License Agreement provided with the software.

This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING 
THE WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR ANY PURPOSE.

For information regarding GFC Commercial License Agreements go to:
	online - http://www.scaleform.com/licensing.html or
	email  - sales@scaleform.com 

**********************************************************************/

// *** Main Progress control namespace 

with GFC_Control_Progress
{

	GFC_Control_DefaultProgress_Style
	{
		GFC_Control_Renderer_Control			=	GFC_CtrlTheme_Bitmap_Control_Progress_Renderer_Control;

		with GFC_Control_Flag
		{
			// Base control flags				
			.Transparent						=	GFlags(GCtrl, GFC_CF_TRANSPARENT);
			.SolidInner							=	0;	//GFlags(GCtrl, GFC_CF_SOLIDINNER);
			.SolidBackground					=	0;	//GFlags(GCtrl, GFC_CF_SOLIDBACKGROUND);
			.RegionClip							=	0;	//GFlags(GCtrl, GFC_CF_REGIONCLIP);
			.RegionClipParent					=	0;	//GFlags(GCtrl, GFC_CF_REGIONCLIP_PARENT);
			.NoExternalWindow					=	0;	//GFlags(GCtrl, GFC_CF_NOEXTERNALWINDOW);
			.HitTest							=	0;	//GFlags(GCtrl, GFC_CF_HITTEST);
			.TopLayer							=	0;	//GFlags(GCtrl, GFC_CF_TOPLAYER);
			.TopLayerBitmap						=	0;	//GFlags(GCtrl, GFC_CF_TOPLAYERBITMAP);
			.BottomLayerBitmap					=	0;	//GFlags(GCtrl, GFC_CF_BOTTOMLAYERBITMAP);
												
			// Control flag change masks		
			.Mask_InvalidateControl				=	GFlags(GCtrl, GFC_CF_DISABLED, GFC_CF_TRANSPARENT, GFC_CF_TOPLAYER);
		}
												
		with .Flag								
		{									
			// Progress flags
			.NoInnerFill						=	GFlags(GProgressCtrl, GFC_CF_PROGRESS_NOINNERFILL);
											
			// Progress flag change masks	
			//.ProgressMask_InvalidateControl	=	GFlags(GProgressCtrl);
		}								
											
		with .Color							
		{								
			.Inner_Default						= 	SF_CtrlTheme_FreeRealms_Control_Color_ProgressChunk1;	// Used for the aplha fill color.
			.Inner_Disable						= 	SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
			
			.Fill_Default						= 	SF_CtrlTheme_FreeRealms_Control_Color_ProgressChunk2;	// Used for the add fill color.
			.Fill_Disable						= 	SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
		}								
											
		with .Combine						
		{								
			.Inner_Default						=	GFC_Control_Combine_Surface;
			.Inner_Disable						=	GFC_Control_Combine_Surface;

			.Fill_Default						=	GFC_Control_Combine_Surface;
			.Fill_Disable						=	GFC_Control_Combine_Surface;

		}
		
		with .Size
		{
			.HMargin			= GRectMargin(15,0,15,0);
			.VMargin			= GRectMargin(0,15,0,15);
			.HDefault			= GSize(26,26);
			.VDefault			= GSize(26,26);
		}
	
		// ******* Initialize all the Bitmap theme Progress properties to avoid inheritance problems
		
		with GFC_CtrlTheme_Bitmap_Control_Progress_Skin
		{
			// Skin used to render the selected skin										
			.HTrack_Default				=	0;
			.HTrack_Disable				=	0;
			.HTrack_Winoff				=	0;
			.HTrack_WinoffDisable		=	0;
			.HInner_Default				=	0;
			.HInner_Disable				=	0;
			.HInner_Winoff				=	0;
			.HInner_WinoffDisable		=	0;
			.HFillLeft_Default			=	0;
			.HFillLeft_Disable			=	0;
			.HFillLeft_Winoff			=	0;
			.HFillLeft_WinoffDisable	=	0;
			.HFillRight_Default			=	0;
			.HFillRight_Disable			=	0;
			.HFillRight_Winoff			=	0;
			.HFillRight_WinoffDisable	=	0;
			.HBorder_Default			=	0;
			.HBorder_Disable			=	0;
			.HBorder_Winoff				=	0;
			.HBorder_WinoffDisable		=	0;

			.VTrack_Default				=	0;
			.VTrack_Disable				=	0;
			.VTrack_Winoff				=	0;
			.VTrack_WinoffDisable		=	0;
			.VInner_Default				=	0;
			.VInner_Disable				=	0;
			.VInner_Winoff				=	0;
			.VInner_WinoffDisable		=	0;
			.VFillUp_Default			=	0;
			.VFillUp_Disable			=	0;
			.VFillUp_Winoff				=	0;
			.VFillUp_WinoffDisable		=	0;
			.VFillDown_Default			=	0;
			.VFillDown_Disable			=	0;
			.VFillDown_Winoff			=	0;
			.VFillDown_WinoffDisable	=	0;
			.VBorder_Default			=	0;
			.VBorder_Disable			=	0;
			.VBorder_Winoff				=	0;
			.VBorder_WinoffDisable		=	0;
		}

		map GFC_Control			=	GFC_Control_DefaultControl_Style;
	}	// end GFC_Control_DefaultProgress_Style




	// ** Normal Progress bar style

	GFC_Control_StandardProgress_Style
	{
		
		// Progress border and inner bitmap skins	
		with GFC_CtrlTheme_Bitmap_Control_Progress_Skin
		{
			//.HInner_Default
			//.HInner_Disable		=	.HInner_Default;
			//.HInner_Winoff		=	.HInner_Default;
			//.HInner_WinoffDisable	= 	.HInner_Default;


			.HFillLeft_Default
			{
				layer
				{
					CenterFlags		= GFlags(GCtrlBitmapSkinSection, GFC_BITMAPSKIN_SECTION_HTILE, GFC_BITMAPSKIN_SECTION_VBILINEAR);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= GFC_Control_Progress_Color_Inner_Default;
					Image			= GBitmap("FreeRealms/FR_ProgressChunkH.tga", HVGrid, 1, 2, 0, 0);
					Margin			= GRectMargin(0,10,0,10);
				}
				layer
				{
					CenterFlags		= GFlags(GCtrlBitmapSkinSection, GFC_BITMAPSKIN_SECTION_HTILE, GFC_BITMAPSKIN_SECTION_VBILINEAR);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= GFC_Control_Progress_Color_Fill_Default;
					Image			= GBitmap("FreeRealms/FR_ProgressChunkH.tga", HVGrid, 1, 2, 0, 1);
					Margin			= GRectMargin(0,10,0,10);
				}
			}
			.HFillLeft_Disable
			{
				layer
				{
					CenterFlags		= GFlags(GCtrlBitmapSkinSection, GFC_BITMAPSKIN_SECTION_HTILE, GFC_BITMAPSKIN_SECTION_VBILINEAR);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= GFC_Control_Progress_Color_Inner_Disable;
					Image			= GBitmap("FreeRealms/FR_ProgressChunkH.tga", HVGrid, 1, 2, 0, 0);
					Margin			= GRectMargin(0,10,0,10);
				}
				layer
				{
					CenterFlags		= GFlags(GCtrlBitmapSkinSection, GFC_BITMAPSKIN_SECTION_HTILE, GFC_BITMAPSKIN_SECTION_VBILINEAR);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= GFC_Control_Progress_Color_Fill_Disable;
					Image			= GBitmap("FreeRealms/FR_ProgressChunkH.tga", HVGrid, 1, 2, 0, 1);
					Margin			= GRectMargin(0,10,0,10);
				}
			}
			.HFillLeft_Winoff			=	.HFillLeft_Default;
			.HFillLeft_WinoffDisable	=	.HFillLeft_Disable;

			.HFillRight_Default
			{
				layer
				{
					CenterFlags		= GFlags(GCtrlBitmapSkinSection, GFC_BITMAPSKIN_SECTION_HTILE_RIGHT, GFC_BITMAPSKIN_SECTION_VBILINEAR);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= GFC_Control_Progress_Color_Inner_Default;
					Image			= GBitmap("FreeRealms/FR_ProgressChunkH.tga", HVGrid, 1, 2, 0, 0);
					Margin			= GRectMargin(0,10,0,10);
				}
				layer
				{
					CenterFlags		= GFlags(GCtrlBitmapSkinSection, GFC_BITMAPSKIN_SECTION_HTILE_RIGHT, GFC_BITMAPSKIN_SECTION_VBILINEAR);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= GFC_Control_Progress_Color_Fill_Default;
					Image			= GBitmap("FreeRealms/FR_ProgressChunkH.tga", HVGrid, 1, 2, 0, 1);
					Margin			= GRectMargin(0,10,0,10);
				}
			}
			.HFillRight_Disable
			{
				layer
				{
					CenterFlags		= GFlags(GCtrlBitmapSkinSection, GFC_BITMAPSKIN_SECTION_HTILE_RIGHT, GFC_BITMAPSKIN_SECTION_VBILINEAR);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= GFC_Control_Progress_Color_Inner_Disable;
					Image			= GBitmap("FreeRealms/FR_ProgressChunkH.tga", HVGrid, 1, 2, 0, 0);
					Margin			= GRectMargin(0,10,0,10);
				}
				layer
				{
					CenterFlags		= GFlags(GCtrlBitmapSkinSection, GFC_BITMAPSKIN_SECTION_HTILE_RIGHT, GFC_BITMAPSKIN_SECTION_VBILINEAR);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= GFC_Control_Progress_Color_Fill_Disable;
					Image			= GBitmap("FreeRealms/FR_ProgressChunkH.tga", HVGrid, 1, 2, 0, 1);
					Margin			= GRectMargin(0,10,0,10);
				}
			}
			.HFillRight_Winoff			=	.HFillRight_Default;
			.HFillRight_WinoffDisable	=	.HFillRight_Disable;

			.HBorder_Default
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(RevSubtract,Disable);
					FactorCombine	= GColorCombine(Modulate,Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
					Image			= GBitmap("FreeRealms/FR_ProgressH.tga", HVGrid, 1, 4, 0, 0);
					Margin			= GRectMargin(15,12,15,12);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
					Image			= GBitmap("FreeRealms/FR_ProgressH.tga", HVGrid, 1, 4, 0, 1);
					Margin			= GRectMargin(15,12,15,12);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
					Image			= GBitmap("FreeRealms/FR_ProgressH.tga", HVGrid, 1, 4, 0, 2);
					Margin			= GRectMargin(15,12,15,12);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
					Image			= GBitmap("FreeRealms/FR_ProgressH.tga", HVGrid, 1, 4, 0, 3);
					Margin			= GRectMargin(15,12,15,12);
				}
			}
			.HBorder_Disable
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
					Image			= GBitmap("FreeRealms/FR_ProgressH.tga", HVGrid, 1, 4, 0, 1);
					Margin			= GRectMargin(15,12,15,12);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
					Image			= GBitmap("FreeRealms/FR_ProgressH.tga", HVGrid, 1, 4, 0, 2);
					Margin			= GRectMargin(15,12,15,12);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
					Image			= GBitmap("FreeRealms/FR_ProgressH.tga", HVGrid, 1, 4, 0, 3);
					Margin			= GRectMargin(15,12,15,12);
				}
			}
			.HBorder_Winoff			=	.HBorder_Default;
			.HBorder_WinoffDisable	=	.HBorder_Disable;

		
			//.VInner_Default
			//.VInner_Disable		=	.VInner_Default;
			//.VInner_Winoff		=	.VInner_Default;
			//.VInner_WinoffDisable	= 	.VInner_Default;


			.VFillUp_Default
			{
				layer
				{
					CenterFlags		= GFlags(GCtrlBitmapSkinSection, GFC_BITMAPSKIN_SECTION_VTILE_BOTTOM, GFC_BITMAPSKIN_SECTION_HBILINEAR);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= GFC_Control_Progress_Color_Inner_Default;
					Image			= GBitmap("FreeRealms/FR_ProgressChunkV.tga", HVGrid, 2, 1, 0, 0);
					Margin			= GRectMargin(10,0,10,0);
				}
				layer
				{
					CenterFlags		= GFlags(GCtrlBitmapSkinSection, GFC_BITMAPSKIN_SECTION_VTILE_BOTTOM, GFC_BITMAPSKIN_SECTION_HBILINEAR);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= GFC_Control_Progress_Color_Fill_Default;
					Image			= GBitmap("FreeRealms/FR_ProgressChunkV.tga", HVGrid, 2, 1, 1, 0);
					Margin			= GRectMargin(10,0,10,0);
				}
			}
			.VFillUp_Disable
			{
				layer
				{
					CenterFlags		= GFlags(GCtrlBitmapSkinSection, GFC_BITMAPSKIN_SECTION_VTILE_BOTTOM, GFC_BITMAPSKIN_SECTION_HBILINEAR);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= GFC_Control_Progress_Color_Inner_Disable;
					Image			= GBitmap("FreeRealms/FR_ProgressChunkV.tga", HVGrid, 2, 1, 0, 0);
					Margin			= GRectMargin(10,0,10,0);
				}
				layer
				{
					CenterFlags		= GFlags(GCtrlBitmapSkinSection, GFC_BITMAPSKIN_SECTION_VTILE_BOTTOM, GFC_BITMAPSKIN_SECTION_HBILINEAR);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= GFC_Control_Progress_Color_Fill_Disable;
					Image			= GBitmap("FreeRealms/FR_ProgressChunkV.tga", HVGrid, 2, 1, 1, 0);
					Margin			= GRectMargin(10,0,10,0);
				}
			}
			.VFillUp_Winoff			=	.VFillUp_Default;
			.VFillUp_WinoffDisable	=	.VFillUp_Disable;

			.VFillDown_Default
			{
				layer
				{
					CenterFlags		= GFlags(GCtrlBitmapSkinSection, GFC_BITMAPSKIN_SECTION_VTILE, GFC_BITMAPSKIN_SECTION_HBILINEAR);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= GFC_Control_Progress_Color_Inner_Default;
					Image			= GBitmap("FreeRealms/FR_ProgressChunkV.tga", HVGrid, 2, 1, 0, 0);
					Margin			= GRectMargin(10,0,10,0);
				}
				layer
				{
					CenterFlags		= GFlags(GCtrlBitmapSkinSection, GFC_BITMAPSKIN_SECTION_VTILE, GFC_BITMAPSKIN_SECTION_HBILINEAR);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= GFC_Control_Progress_Color_Fill_Default;
					Image			= GBitmap("FreeRealms/FR_ProgressChunkV.tga", HVGrid, 2, 1, 1, 0);
					Margin			= GRectMargin(10,0,10,0);
				}
			}
			.VFillDown_Disable
			{
				layer
				{
					CenterFlags		= GFlags(GCtrlBitmapSkinSection, GFC_BITMAPSKIN_SECTION_VTILE, GFC_BITMAPSKIN_SECTION_HBILINEAR);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= GFC_Control_Progress_Color_Inner_Disable;
					Image			= GBitmap("FreeRealms/FR_ProgressChunkV.tga", HVGrid, 2, 1, 0, 0);
					Margin			= GRectMargin(10,0,10,0);
				}
				layer
				{
					CenterFlags		= GFlags(GCtrlBitmapSkinSection, GFC_BITMAPSKIN_SECTION_VTILE, GFC_BITMAPSKIN_SECTION_HBILINEAR);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= GFC_Control_Progress_Color_Fill_Disable;
					Image			= GBitmap("FreeRealms/FR_ProgressChunkV.tga", HVGrid, 2, 1, 1, 0);
					Margin			= GRectMargin(10,0,10,0);
				}
			}
			.VFillDown_Winoff			=	.VFillDown_Default;
			.VFillDown_WinoffDisable	=	.VFillDown_Disable;

			.VBorder_Default
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(RevSubtract,Disable);
					FactorCombine	= GColorCombine(Modulate,Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
					Image			= GBitmap("FreeRealms/FR_ProgressV.tga", HVGrid, 4, 1, 0, 0);
					Margin			= GRectMargin(12,15,12,15);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
					Image			= GBitmap("FreeRealms/FR_ProgressV.tga", HVGrid, 4, 1, 1, 0);
					Margin			= GRectMargin(12,15,12,15);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
					Image			= GBitmap("FreeRealms/FR_ProgressV.tga", HVGrid, 4, 1, 2, 0);
					Margin			= GRectMargin(12,15,12,15);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
					Image			= GBitmap("FreeRealms/FR_ProgressV.tga", HVGrid, 4, 1, 3, 0);
					Margin			= GRectMargin(12,15,12,15);
				}
			}
			.VBorder_Disable
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
					Image			= GBitmap("FreeRealms/FR_ProgressV.tga", HVGrid, 4, 1, 1, 0);
					Margin			= GRectMargin(12,15,12,15);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
					Image			= GBitmap("FreeRealms/FR_ProgressV.tga", HVGrid, 4, 1, 2, 0);
					Margin			= GRectMargin(12,15,12,15);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
					Image			= GBitmap("FreeRealms/FR_ProgressV.tga", HVGrid, 4, 1, 3, 0);
					Margin			= GRectMargin(12,15,12,15);
				}
			}
			.VBorder_Winoff			=	.VBorder_Default;
			.VBorder_WinoffDisable	=	.VBorder_Disable;

		}

		map SF_CtrlTheme_FreeRealms_Control						= GFC_Control_DefaultProgress_Style;
		map GFC_CtrlTheme_Bitmap_Control_Progress					= GFC_Control_DefaultProgress_Style;
		map GFC_Control											= GFC_Control_DefaultProgress_Style;
	}
}

