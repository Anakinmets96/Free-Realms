/********************************************************************** 

Filename	:	FreeRealmsTheme_Tab.thm
Content		:	FreeRealms - GTab control theme

Licensees may use this file in accordance with the valid Scaleform
GFC Commercial License Agreement provided with the software.

This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING 
THE WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR ANY PURPOSE.

For information regarding GFC Commercial License Agreements go to:
	online - http://www.scaleform.com/licensing.html or
	email  - sales@scaleform.com 

**********************************************************************/

// ***** Main Tab control namespace 


with GFC_Control_Tab
{

	GFC_Control_DefaultTab_Style
	{
		GFC_Control_Update_ChildLayout			=	GFC_CtrlTheme_Bitmap_Control_Tab_Update_ChildLayout;

		GFC_Control_Renderer_Control			=	GFC_CtrlTheme_Bitmap_Control_Tab_Renderer_Control;

		with .Renderer
		{
			// Item renderers
			.Item								=	GFC_CtrlTheme_Bitmap_Control_Tab_Renderer_Item;
			.Text								=	GFC_CtrlTheme_Bitmap_Control_Tab_Renderer_Text;
			.Image								=	GFC_CtrlTheme_Bitmap_Control_Tab_Renderer_Image;
		}								

		with  .Child
		{
			.UpButton			=	GFC_CtrlTheme_Bitmap_Control_Tab_Child_UpButton;
			.DownButton			=	GFC_CtrlTheme_Bitmap_Control_Tab_Child_DownButton;
			.LeftButton			=	GFC_CtrlTheme_Bitmap_Control_Tab_Child_LeftButton;
			.RightButton		=	GFC_CtrlTheme_Bitmap_Control_Tab_Child_RightButton;
		}					

		with GFC_Control_Flag
		{
			// Base control flags				
			.Transparent						=	GFlags(GCtrl, GFC_CF_TRANSPARENT);
			.SolidInner							=	0;	//GFlags(GCtrl, GFC_CF_SOLIDINNER);
			.SolidBackground					=	0;	//GFlags(GCtrl, GFC_CF_SOLIDBACKGROUND);
			.RegionClip							=	0;	//GFlags(GCtrl, GFC_CF_REGIONCLIP);
			.RegionClipParent					=	0;	//GFlags(GCtrl, GFC_CF_REGIONCLIP_PARENT);
			.NoExternalWindow					=	0;	//GFlags(GCtrl, GFC_CF_NOEXTERNALWINDOW);
			.HitTest							=	0;	//GFlags(GCtrl, GFC_CF_HITTEST);
			.TopLayer							=	0;	//GFlags(GCtrl, GFC_CF_TOPLAYER);
			.TopLayerBitmap						=	0;	//GFlags(GCtrl, GFC_CF_TOPLAYERBITMAP);
			.BottomLayerBitmap					=	0;	//GFlags(GCtrl, GFC_CF_BOTTOMLAYERBITMAP);

			// Control flag change masks		
			.Mask_InvalidateControl				=	GFlags(GCtrl, GFC_CF_DISABLED, GFC_CF_TRANSPARENT, GFC_CF_TOPLAYER);
		}

		with .Flag
		{
			// Tab control flags
			.Align								=	GFlags(GTabCtrl, GFC_CF_TAB_ALIGN_BEGIN);
			.SingleLine							=	GFlags(GTabCtrl, GFC_CF_TAB_SINGLELINE);
			.SwitchLevels						=	GFlags(GTabCtrl); // GFC_CF_TAB_SWITCHLEVELS
			.Levels								=	GFlags(GTabCtrl, GFC_CF_TAB_LEVELS_AVGAUTOWRAP);
			.AutoStretch						=	GFlags(GTabCtrl, GFC_CF_TAB_AUTOSTRETCH_ALL);
			.Arrow								=	GFlags(GTabCtrl, GFC_CF_TAB_ARROW_END);
			.NoArrowHide						=	GFlags(GTabCtrl); //, GFC_CF_TAB_NOARROWHIDE);
			.Wrap								=	GFlags(GTabCtrl, GFC_CF_TAB_WRAP_TAIL);
			.SingleLineStretch					=	GFlags(GTabCtrl); // GFC_CF_TAB_SINGLELINE_STRETCH);
			.Focus								=	0;	//GFlags(GTabCtrl, GFC_CF_Tab1_Focus_ITEM); // Draw focus around the entire item
			.Item_VAlign						=	GFlags(GTabCtrl, GFC_CF_TAB_ITEM_VCENTER);
			.Item_HAlign						=	GFlags(GTabCtrl, GFC_CF_TAB_ITEM_HCENTER);
			.Item_VTextAlign					=	GFlags(GTabCtrl, GFC_CF_TAB_ITEM_TEXT_VCENTER);
			.Item_HTextAlign					=	GFlags(GTabCtrl, GFC_CF_TAB_ITEM_TEXT_RIGHT);
				
			// .ButtonMask_InvalidateControl
		}

		// Base sizes
		with .Size
		{
		
			// Space between text and image in a tab
			.ItemContentSpace			=	GFC_Control_Size_ItemSpace;

			// Tab-orientation dependent sizes
			with .Top
			{
				.FlatMin				=	GSize(16, 12);
				.DiagonalMin			=	GSize(12, 16);
				.Begin_Indent			=	6;
				.Begin_IndentInc		=	0;
				.Begin_Arrow_Indent		=	40;
				.End_Indent				=	6;
				.End_IndentInc			=	0;
				.End_Arrow_Indent		=	40;
				.Baseline				=	3;
				.BaselineExtent			=	0;
				.FrameMargin			=	GRectMargin(2,2,2,2);
				.FrameExtent			=	GRectMargin(0,0,0,2);
				.FocusMargin			=	GRectMargin(2,4,2,4);
			}
			with .Left
			{
				.FlatMin				=	GSize(16, 12);
				.DiagonalMin			=	GSize(12, 16);
				.Begin_Indent			=	6;
				.Begin_IndentInc		=	0;
				.Begin_Arrow_Indent		=	20;
				.End_Indent				=	6;
				.End_IndentInc			=	0;
				.End_Arrow_Indent		=	20;
				.Baseline				=	1;
				.BaselineExtent			=	0;
				.FrameMargin			=	GRectMargin(2,2,2,2);
				.FrameExtent			=	GRectMargin(0,0,0,2);
				.FocusMargin			=	GRectMargin(2,4,2,4);
			}
			with .Bottom
			{
				.FlatMin				=	GSize(16, 12);
				.DiagonalMin			=	GSize(12, 16);
				.Begin_Indent			=	6;
				.Begin_IndentInc		=	0;
				.Begin_Arrow_Indent		=	40;
				.End_Indent				=	6;
				.End_IndentInc			=	0;
				.End_Arrow_Indent		=	40;
				.Baseline				=	5;
				.BaselineExtent			=	2;
				.FrameMargin			=	GRectMargin(2,2,2,2);
				.FrameExtent			=	GRectMargin(0,0,0,2);
				.FocusMargin			=	GRectMargin(2,4,2,4);
			}
			with .Right
			{
				.FlatMin				=	GSize(16, 12);
				.DiagonalMin			=	GSize(12, 16);
				.Begin_Indent			=	6;
				.Begin_IndentInc		=	0;
				.Begin_Arrow_Indent		=	20;
				.End_Indent				=	6;
				.End_IndentInc			=	0;
				.End_Arrow_Indent		=	20;
				.Baseline				=	1;
				.BaselineExtent			=	0;
				.FrameMargin			=	GRectMargin(2,2,2,2);
				.FrameExtent			=	GRectMargin(0,0,0,2);
				.FocusMargin			=	GRectMargin(2,4,2,4);
			}

			// Tab-orientation dependent sizes
			with .Top
			{				
				.Begin_Arrow_EdgeSpace			=	2;
				.Begin_Arrow_SiblingSpace		=	0;
				.Begin_Arrow_LiftSpace			=	2;
				.Begin_Arrow_Prev				=	GSize(18,18);
				.Begin_Arrow_Next				=	GSize(18,18);
				.Begin_Arrow_Order				=	GFlags(GTabCtrlArrowButton, GFC_TAB_ARROW_ORDER_HNORMAL);
				.End_Arrow_EdgeSpace			=	2;
				.End_Arrow_SiblingSpace			=	0;
				.End_Arrow_LiftSpace			=	2;
				.End_Arrow_Prev					=	GSize(18,18);
				.End_Arrow_Next					=	GSize(18,18);
				.End_Arrow_Order				=	GFlags(GTabCtrlArrowButton, GFC_TAB_ARROW_ORDER_HNORMAL);
			}
			with .Left
			{				
				.Begin_Arrow_EdgeSpace			=	2;
				.Begin_Arrow_SiblingSpace		=	0;
				.Begin_Arrow_LiftSpace			=	2;
				.Begin_Arrow_Prev				=	GSize(18,18);
				.Begin_Arrow_Next				=	GSize(18,18);
				.Begin_Arrow_Order				=	GFlags(GTabCtrlArrowButton, GFC_TAB_ARROW_ORDER_HNORMAL);
				.End_Arrow_EdgeSpace			=	2;
				.End_Arrow_SiblingSpace			=	0;
				.End_Arrow_LiftSpace			=	2;
				.End_Arrow_Prev					=	GSize(18,18);
				.End_Arrow_Next					=	GSize(18,18);
				.End_Arrow_Order				=	GFlags(GTabCtrlArrowButton, GFC_TAB_ARROW_ORDER_HNORMAL);
			}
			with .Bottom
			{				
				.Begin_Arrow_EdgeSpace			=	2;
				.Begin_Arrow_SiblingSpace		=	0;
				.Begin_Arrow_LiftSpace			=	2;
				.Begin_Arrow_Prev				=	GSize(18,18);
				.Begin_Arrow_Next				=	GSize(18,18);
				.Begin_Arrow_Order				=	GFlags(GTabCtrlArrowButton, GFC_TAB_ARROW_ORDER_HNORMAL);
				.End_Arrow_EdgeSpace			=	2;
				.End_Arrow_SiblingSpace			=	0;
				.End_Arrow_LiftSpace			=	2;
				.End_Arrow_Prev					=	GSize(18,18);
				.End_Arrow_Next					=	GSize(18,18);
				.End_Arrow_Order				=	GFlags(GTabCtrlArrowButton, GFC_TAB_ARROW_ORDER_HNORMAL);
			}
			with .Right
			{				
				.Begin_Arrow_EdgeSpace			=	2;
				.Begin_Arrow_SiblingSpace		=	0;
				.Begin_Arrow_LiftSpace			=	2;
				.Begin_Arrow_Prev				=	GSize(18,18);
				.Begin_Arrow_Next				=	GSize(18,18);
				.Begin_Arrow_Order				=	GFlags(GTabCtrlArrowButton, GFC_TAB_ARROW_ORDER_HNORMAL);
				.End_Arrow_EdgeSpace			=	2;
				.End_Arrow_SiblingSpace			=	0;
				.End_Arrow_LiftSpace			=	2;
				.End_Arrow_Prev					=	GSize(18,18);
				.End_Arrow_Next					=	GSize(18,18);
				.End_Arrow_Order				=	GFlags(GTabCtrlArrowButton, GFC_TAB_ARROW_ORDER_HNORMAL);
			}
		}


		with .Color
		{			
			.Inner								=	GFC_Control_Color_Inner_Default;
			.Highlight							=	GColor(Yellow);

			.Image_Default						=	GFC_Control_Color_Image_Default;
			.Image_Disable						=	GFC_Control_Color_Image_Disable;

			.Text_Default						=	SF_CtrlTheme_FreeRealms_Control_Color_InvertText;
			.Text_Rollover						=	.Text_Default; 
			.Text_Select						=	GFC_Control_Color_Text_Default; 
			.Text_SelectRollover				=	.Text_Select;
			.Text_Disable						=	.Text_Default;
			.Text_DisableSelect					=	GFC_Control_Color_Text_Disable;

			.Text_Winoff						=	SF_CtrlTheme_FreeRealms_Control_Color_InvertText;
			.Text_WinoffRollover				=	.Text_Default; 
			.Text_WinoffSelect					=	GFC_Control_Color_Text_Default; 
			.Text_WinoffSelectRollover			=	.Text_Select;
			.Text_WinoffDisable					=	.Text_Default;
			.Text_WinoffDisableSelect			=	GFC_Control_Color_Text_Disable;

			.TextShadow_Default					=	GFC_Control_Color_TextShadow_Default;
			.TextShadow_Rollover				=	.TextShadow_Default;
			.TextShadow_Select					=	.TextShadow_Default;
			.TextShadow_SelectRollover			=	.TextShadow_Default;
			.TextShadow_Disable					=	GFC_Control_Color_TextShadow_Disable;
			.TextShadow_DisableSelect			=	.TextShadow_Disable;

			.TextShadow_Winoff					=	GFC_Control_Color_TextShadow_Default;
			.TextShadow_WinoffRollover			=	.TextShadow_Default;
			.TextShadow_WinoffSelect			=	.TextShadow_Default;
			.TextShadow_WinoffSelectRollover	=	.TextShadow_Default;
			.TextShadow_WinoffDisable			=	GFC_Control_Color_TextShadow_Disable;
			.TextShadow_WinoffDisableSelect		=	.TextShadow_Disable;
		}

		with .Combine
		{
			.Inner_Dest							=	GFC_Control_Combine_Inner_Default;
			.Inner_Factor						=	GColorCombine(Source, Source);
												
			.Highlight_Dest						=	GFC_Control_Combine_Inner_Default;
			.Highlight_Factor					=	GColorCombine(Source, Source);

			.Image_Default_Dest					=	GFC_Control_Combine_Image_Default_Dest;
			.Image_Default_Factor				=	GFC_Control_Combine_Image_Default_Factor;
			.Image_Disable_Dest					=	GFC_Control_Combine_Image_Disable_Dest;
			.Image_Disable_Factor				=	GFC_Control_Combine_Image_Disable_Factor;

			.Text_Default_Dest					=	GFC_Control_Combine_Text_Default_Dest;
			.Text_Default_Factor				=	GFC_Control_Combine_Text_Default_Factor;
			.Text_Rollover_Dest					=	.Text_Default_Dest;
			.Text_Rollover_Factor				=	.Text_Default_Factor;
			.Text_Select_Dest					=	.Text_Default_Dest;
			.Text_Select_Factor					=	.Text_Default_Factor;
			.Text_SelectRollover_Dest			=	.Text_Default_Dest;
			.Text_SelectRollover_Factor			=	.Text_Default_Factor;
			.Text_Disable_Dest					=	.Text_Default_Dest;
			.Text_Disable_Factor				=	.Text_Default_Factor;
			.Text_DisableSelect_Dest			=	GFC_Control_Combine_Text_Disable_Dest;
			.Text_DisableSelect_Factor			=	GFC_Control_Combine_Text_Disable_Factor;

			.Text_Winoff_Dest					=	GFC_Control_Combine_Text_Default_Dest;
			.Text_Winoff_Factor					=	GFC_Control_Combine_Text_Default_Factor;
			.Text_WinoffRollover_Dest			=	.Text_Default_Dest;
			.Text_WinoffRollover_Factor			=	.Text_Default_Factor;
			.Text_WinoffSelect_Dest				=	.Text_Default_Dest;
			.Text_WinoffSelect_Factor			=	.Text_Default_Factor;
			.Text_WinoffSelectRollover_Dest		=	.Text_Default_Dest;
			.Text_WinoffSelectRollover_Factor	=	.Text_Default_Factor;
			.Text_WinoffDisable_Dest			=	.Text_Default_Dest;
			.Text_WinoffDisable_Factor			=	.Text_Default_Factor;
			.Text_WinoffDisableSelect_Dest		=	GFC_Control_Combine_Text_Disable_Dest;
			.Text_WinoffDisableSelect_Factor	=	GFC_Control_Combine_Text_Disable_Factor;

			.TextShadow_Default_Dest			=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Default_Dest;			
			.TextShadow_Default_Factor			=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Default_Factor;
			.TextShadow_Rollover_Dest			=	GColorCombine(Disable, Disable);	//.TextShadow_Default_Dest;		
			.TextShadow_Rollover_Factor			=	GColorCombine(Disable, Disable);	//.TextShadow_Default_Factor;
			.TextShadow_Select_Dest				=	GColorCombine(Disable, Disable);	//.TextShadow_Default_Dest;	
			.TextShadow_Select_Factor			=	GColorCombine(Disable, Disable);	//.TextShadow_Default_Factor;
			.TextShadow_SelectRollover_Dest		=	GColorCombine(Disable, Disable);	//.TextShadow_Default_Dest;			
			.TextShadow_SelectRollover_Factor	=	GColorCombine(Disable, Disable);	//.TextShadow_Default_Factor;
			.TextShadow_Disable_Dest			=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Disable_Dest;
			.TextShadow_Disable_Factor			=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Disable_Factor;
			.TextShadow_DisableSelect_Dest		=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Disable_Dest;
			.TextShadow_DisableSelect_Factor	=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Disable_Factor;
			
			.TextShadow_Winoff_Dest						=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Default_Dest;			
			.TextShadow_Winoff_Factor					=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Default_Factor;
			.TextShadow_WinoffRollover_Dest				=	GColorCombine(Disable, Disable);	//.TextShadow_Default_Dest;		
			.TextShadow_WinoffRollover_Factor			=	GColorCombine(Disable, Disable);	//.TextShadow_Default_Factor;
			.TextShadow_WinoffSelect_Dest				=	GColorCombine(Disable, Disable);	//.TextShadow_Default_Dest;	
			.TextShadow_WinoffSelect_Factor				=	GColorCombine(Disable, Disable);	//.TextShadow_Default_Factor;
			.TextShadow_WinoffSelectRollover_Dest		=	GColorCombine(Disable, Disable);	//.TextShadow_Default_Dest;			
			.TextShadow_WinoffSelectRollover_Factor		=	GColorCombine(Disable, Disable);	//.TextShadow_Default_Factor;
			.TextShadow_WinoffDisable_Dest				=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Disable_Dest;
			.TextShadow_WinoffDisable_Factor			=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Disable_Factor;
			.TextShadow_WinoffDisableSelect_Dest		=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Disable_Dest;
			.TextShadow_WinoffDisableSelect_Factor		=	GColorCombine(Disable, Disable);	//GFC_Control_Combine_TextShadow_Disable_Factor;
		}

		// Fonts
		.Font_Default			=	GFC_Control_Font_Header;
		.Font_Select			=	GFC_Control_Font_Header;

		map GFC_Control			=	GFC_Control_DefaultControl_Style;
	} // end Default style



// *** Button styles used by tab 

with GFC_Control_Button
{

	style SF_CtrlTheme_FreeRealms_Control_Tab_Arrow_LeftButton_Style
	{
		GFC_Control_Renderer_Control	=	GFC_CtrlTheme_Bitmap_Control_Button_Renderer_ControlStandard;		
		
		.Size_BorderMargin				=	GRectMargin(3,3,3,3);

		// Image skins
		with GFC_CtrlTheme_Bitmap_Control_Button_Skin
		{
			.Default
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(RevSubtract,Disable);
					FactorCombine	= GColorCombine(Modulate,Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 1);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 2);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 3);
					Margin			= GRectMargin(0,0,0,0);
				}
			}
			.Rollover
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(RevSubtract,Disable);
					FactorCombine	= GColorCombine(Modulate,Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 1);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 2);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 3);
					Margin			= GRectMargin(0,0,0,0);
				}
			}
			.Press
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 1);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 2);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 3);
					Margin			= GRectMargin(0,0,0,0);
				}
			}
			.Disable
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 1);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 2);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 2, 3);
					Margin			= GRectMargin(0,0,0,0);
				}
			}			

			.Focus			=	.Rollover;
			.FocusRollover	=	.Rollover;
		}		
		
		// Map the rest of the properties to default
		map GFC_CtrlTheme_Bitmap_Control_Button			=	GFC_Control_DefaultButton_Style;
		map GFC_Control									=	GFC_Control_DefaultButton_Style;
	}

	style SF_CtrlTheme_FreeRealms_Control_Tab_Arrow_RightButton_Style
	{
		GFC_Control_Renderer_Control	=	GFC_CtrlTheme_Bitmap_Control_Button_Renderer_ControlStandard;		
		
		.Size_BorderMargin				=	GRectMargin(3,3,3,3);

		// Image skins
		with GFC_CtrlTheme_Bitmap_Control_Button_Skin
		{
			.Default
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(RevSubtract,Disable);
					FactorCombine	= GColorCombine(Modulate,Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 1);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 2);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 3);
					Margin			= GRectMargin(0,0,0,0);
				}
			}
			.Rollover
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(RevSubtract,Disable);
					FactorCombine	= GColorCombine(Modulate,Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 1);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 2);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 3);
					Margin			= GRectMargin(0,0,0,0);
				}
			}
			.Press
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 1);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 2);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 3);
					Margin			= GRectMargin(0,0,0,0);
				}
			}
			.Disable
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 1);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 2);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 3, 3);
					Margin			= GRectMargin(0,0,0,0);
				}
			}			

			.Focus			=	.Rollover;
			.FocusRollover	=	.Rollover;
		}		
		
		// Map the rest of the properties to default
		map GFC_CtrlTheme_Bitmap_Control_Button			=	GFC_Control_DefaultButton_Style;
		map GFC_Control									=	GFC_Control_DefaultButton_Style;
	}


	style SF_CtrlTheme_FreeRealms_Control_Tab_Arrow_UpButton_Style
	{
		GFC_Control_Renderer_Control	=	GFC_CtrlTheme_Bitmap_Control_Button_Renderer_ControlStandard;		
		
		.Size_BorderMargin				=	GRectMargin(3,3,3,3);

		// Image skins
		with GFC_CtrlTheme_Bitmap_Control_Button_Skin
		{
			.Default
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(RevSubtract,Disable);
					FactorCombine	= GColorCombine(Modulate,Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 1);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 2);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 3);
					Margin			= GRectMargin(0,0,0,0);
				}
			}
			.Rollover
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(RevSubtract,Disable);
					FactorCombine	= GColorCombine(Modulate,Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 1);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 2);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 3);
					Margin			= GRectMargin(0,0,0,0);
				}
			}
			.Press
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 1);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 2);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 3);
					Margin			= GRectMargin(0,0,0,0);
				}
			}
			.Disable
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 1);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 2);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 0, 3);
					Margin			= GRectMargin(0,0,0,0);
				}
			}			

			.Focus			=	.Rollover;
			.FocusRollover	=	.Rollover;
		}		
		
		// Map the rest of the properties to default
		map GFC_CtrlTheme_Bitmap_Control_Button			=	GFC_Control_DefaultButton_Style;
		map GFC_Control									=	GFC_Control_DefaultButton_Style;
	}

	style SF_CtrlTheme_FreeRealms_Control_Tab_Arrow_DownButton_Style
	{
		GFC_Control_Renderer_Control	=	GFC_CtrlTheme_Bitmap_Control_Button_Renderer_ControlStandard;		
		
		.Size_BorderMargin				=	GRectMargin(3,3,3,3);

		// Image skins
		with GFC_CtrlTheme_Bitmap_Control_Button_Skin
		{
			.Default
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(RevSubtract,Disable);
					FactorCombine	= GColorCombine(Modulate,Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 1);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 2);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 3);
					Margin			= GRectMargin(0,0,0,0);
				}
			}
			.Rollover
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(RevSubtract,Disable);
					FactorCombine	= GColorCombine(Modulate,Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 0);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 1);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 2);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 3);
					Margin			= GRectMargin(0,0,0,0);
				}
			}
			.Press
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 1);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 2);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 3);
					Margin			= GRectMargin(0,0,0,0);
				}
			}
			.Disable
			{
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(BlendSource,Disable);
					FactorCombine	= GColorCombine(Modulate, Modulate);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 1);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 2);
					Margin			= GRectMargin(0,0,0,0);
				}
				layer
				{
					LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
					DestCombine		= GColorCombine(Add,Disable);
					FactorCombine	= GColorCombine(Modulate, Source);
					FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
					Image			= GBitmap("FreeRealms/FR_ScrollButton.tga", HVGrid, 4, 4, 1, 3);
					Margin			= GRectMargin(0,0,0,0);
				}
			}			

			.Focus			=	.Rollover;
			.FocusRollover	=	.Rollover;
		}		
		
		// Map the rest of the properties to default
		map GFC_CtrlTheme_Bitmap_Control_Button			=	GFC_Control_DefaultButton_Style;
		map GFC_Control									=	GFC_Control_DefaultButton_Style;
	}

}	// end GFC_Control_Button
	



	GFC_Control_StandardTab_Style
	{
		// Assigned Button styles

		.StyleId_LeftButton		=	GPropertyId(SF_CtrlTheme_FreeRealms_Control_Tab_Arrow_LeftButton_Style);
		.StyleId_RightButton	=	GPropertyId(SF_CtrlTheme_FreeRealms_Control_Tab_Arrow_RightButton_Style);
		.StyleId_UpButton		=	GPropertyId(SF_CtrlTheme_FreeRealms_Control_Tab_Arrow_UpButton_Style);
		.StyleId_DownButton		=	GPropertyId(SF_CtrlTheme_FreeRealms_Control_Tab_Arrow_DownButton_Style);


		// Styles for the tab drawn items

		
		// ***** Top Tab Styles
		
		GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Top_Begin_BaseLevel_Single
		{
			
			with GFC_CtrlTheme_Bitmap_Control_Tab_Skin_Full
			{
				.Default
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 0, 0);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 0, 1);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 0, 2);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 0, 3);
						Margin			= GRectMargin(10,12,10,10);
					}
				}
				.Rollover
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 0, 0);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 0, 1);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 0, 2);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 0, 3);
						Margin			= GRectMargin(10,12,10,10);
					}
				}
				.Select
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Top.tga", HVGrid, 3, 3, 0, 1);
						Margin			= GRectMargin(10,12,10,10);
					}
				}
				.Itemdisable
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 0, 1);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 0, 2);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 0, 3);
						Margin			= GRectMargin(10,12,10,10);
					}
				}
				.SelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Top.tga", HVGrid, 3, 3, 0, 1);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Top.tga", HVGrid, 3, 3, 0, 2);
						Margin			= GRectMargin(10,12,10,10);
					}
				}				
				.DisableSelect			
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Top.tga", HVGrid, 3, 3, 0, 1);
						Margin			= GRectMargin(10,12,10,10);
					}
				}					
				.DisableSelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Top.tga", HVGrid, 3, 3, 0, 1);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Top.tga", HVGrid, 3, 3, 0, 2);
						Margin			= GRectMargin(10,12,10,10);
					}
				}

				// These share existing skins
				.Press							=	.Rollover;
				.SelectPress					=	.Select;
				.SelectRollover					=	.Select;
				.SelectItemdisable				=	.DisableSelect;
				.SelectFocusRollover			=	.SelectFocus;

				.Disable 						=	.Itemdisable;
				.DisablePress 					=	.Disable;
				.DisableRollover 				=	.Disable;
				.DisableItemdisable 			=	.Disable;
				.DisableSelectPress 			=	.DisableSelect;
				.DisableSelectRollover 			=	.DisableSelect;
				.DisableSelectItemdisable 		=	.DisableSelect;

				.DisableSelectFocusRollover 	=	.DisableSelectFocus;
			}

			// Right-cut skin
			with GFC_CtrlTheme_Bitmap_Control_Tab_Skin_EndCut
			{				
				.Default
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 1, 0);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 1, 1);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 1, 2);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 1, 3);
						Margin			= GRectMargin(10,12,10,10);
					}
				}
				.Rollover
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 1, 0);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 1, 1);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 1, 2);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 1, 3);
						Margin			= GRectMargin(10,12,10,10);
					}
				}
				.Select
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Top.tga", HVGrid, 3, 3, 1, 1);
						Margin			= GRectMargin(10,12,10,10);
					}
				}
				.Itemdisable
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 1, 1);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 1, 2);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 1, 3);
						Margin			= GRectMargin(10,12,10,10);
					}
				}
				.SelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Top.tga", HVGrid, 3, 3, 1, 1);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Top.tga", HVGrid, 3, 3, 1, 2);
						Margin			= GRectMargin(10,12,10,10);
					}
				}				
				.DisableSelect			
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Top.tga", HVGrid, 3, 3, 1, 1);
						Margin			= GRectMargin(10,12,10,10);
					}
				}					
				.DisableSelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Top.tga", HVGrid, 3, 3, 1, 1);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Top.tga", HVGrid, 3, 3, 1, 2);
						Margin			= GRectMargin(10,12,10,10);
					}
				}

				// These share existing skins
				.Press							=	.Rollover;
				.SelectPress					=	.Select;
				.SelectRollover					=	.Select;
				.SelectItemdisable				=	.DisableSelect;
				.SelectFocusRollover			=	.SelectFocus;

				.Disable 						=	.Itemdisable;
				.DisablePress 					=	.Disable;
				.DisableRollover 				=	.Disable;
				.DisableItemdisable 			=	.Disable;
				.DisableSelectPress 			=	.DisableSelect;
				.DisableSelectRollover 			=	.DisableSelect;
				.DisableSelectItemdisable 		=	.DisableSelect;

				.DisableSelectFocusRollover 	=	.DisableSelectFocus;
			}

			// Left-cut skin
			with GFC_CtrlTheme_Bitmap_Control_Tab_Skin_BeginCut
			{				
				.Default
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 2, 0);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 2, 1);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 2, 2);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 2, 3);
						Margin			= GRectMargin(10,12,10,10);
					}
				}
				.Rollover
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 2, 0);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 2, 1);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 2, 2);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 2, 3);
						Margin			= GRectMargin(10,12,10,10);
					}
				}
				.Select
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Top.tga", HVGrid, 3, 3, 2, 1);
						Margin			= GRectMargin(10,12,10,10);
					}
				}
				.Itemdisable
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 2, 1);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 2, 2);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_Tabs_Top.tga", HVGrid, 3, 5, 2, 3);
						Margin			= GRectMargin(10,12,10,10);
					}
				}
				.SelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Top.tga", HVGrid, 3, 3, 2, 1);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Top.tga", HVGrid, 3, 3, 2, 2);
						Margin			= GRectMargin(10,12,10,10);
					}
				}				
				.DisableSelect			
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Top.tga", HVGrid, 3, 3, 2, 1);
						Margin			= GRectMargin(10,12,10,10);
					}
				}					
				.DisableSelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Top.tga", HVGrid, 3, 3, 2, 1);
						Margin			= GRectMargin(10,12,10,10);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Top.tga", HVGrid, 3, 3, 2, 2);
						Margin			= GRectMargin(10,12,10,10);
					}
				}

				// These share existing skins
				.Press							=	.Rollover;
				.SelectPress					=	.Select;
				.SelectRollover					=	.Select;
				.SelectItemdisable				=	.DisableSelect;
				.SelectFocusRollover			=	.SelectFocus;

				.Disable 						=	.Itemdisable;
				.DisablePress 					=	.Disable;
				.DisableRollover 				=	.Disable;
				.DisableItemdisable 			=	.Disable;
				.DisableSelectPress 			=	.DisableSelect;
				.DisableSelectRollover 			=	.DisableSelect;
				.DisableSelectItemdisable 		=	.DisableSelect;

				.DisableSelectFocusRollover 	=	.DisableSelectFocus;
			}

			// Frame skin
			with GFC_CtrlTheme_Bitmap_Control_Tab_Skin_Frame
			{
				.Default
				{
					layer
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		=	GColorCombine(RevSubtract,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			=	GBitmap("FreeRealms/FR_Border.tga", HVGrid, 2, 3, 1, 0);
						Margin			=	GRectMargin(4,4,4,4);
					}
					layer 
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		=	GColorCombine(Add,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			=	GBitmap("FreeRealms/FR_Border.tga", HVGrid, 2, 3, 1, 2);
						Margin			=	GRectMargin(4,4,4,4);
					}
				}					
				.Disable
				{
					layer 
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		=	GColorCombine(Add,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			=	GBitmap("FreeRealms/FR_Border.tga", HVGrid, 2, 3, 1, 2);
						Margin			=	GRectMargin(4,4,4,4);
					}
				}
				.Winoff				=	.Default;
				.WinoffDisable		=	.Disable;
			}

			// Baseline skin - a hack in XP
			with GFC_CtrlTheme_Bitmap_Control_Tab_Skin_Baseline
			{
				.Default
				{
					layer
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE);
						DestCombine		=	GColorCombine(RevSubtract,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			=	GBitmap("FreeRealms/FR_BaselineH.tga", HVGrid, 1, 2, 0, 0);
						Margin			=	GRectMargin(0,0,0,0);
					}
					layer 
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE);
						DestCombine		=	GColorCombine(Add,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			=	GBitmap("FreeRealms/FR_BaselineH.tga", HVGrid, 1, 2, 0, 1);
						Margin			=	GRectMargin(0,0,0,0);
					}
				}
				.Disable
				{
					layer 
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE);
						DestCombine		=	GColorCombine(Add,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			=	GBitmap("FreeRealms/FR_BaselineH.tga", HVGrid, 1, 2, 0, 1);
						Margin			=	GRectMargin(0,0,0,0);
					}
				}
				.Winoff				=	.Default;
				.WinoffDisable		=	.Disable;
			}


			// Sizes for these tabs:
			with GFC_CtrlTheme_Bitmap_Control_Tab_Size
			{
				.SkinSizeExtent_Default			=	GRectMargin(7,5,7,3);
				.SkinSizeExtent_Select			=	GRectMargin(7,5,7,3);
				.SkinExtent_Default				=	GRectMargin(2,0,2,0);
				.SkinExtent_Select				=	GRectMargin(2,0,2,1);

				// Cut-off values
				// Minimum value that can be cut-off
				.SkinMinCutOffAmount_Default	=	3;
				.SkinMinCutOffAmount_Select		=	3;
				// Minimum size the cut-off value should be
				.SkinMinCutSize_Default			=	7;
				.SkinMinCutSize_Select			=	7;

				.BeginCut_ClipMargin_Default	=	GRectMargin(4,4,4,4);
				.BeginCut_ClipMargin_Select		=	GRectMargin(4,4,4,4);
				.EndCut_ClipMargin_Default		=	GRectMargin(4,4,4,4);
				.EndCut_ClipMargin_Select		=	GRectMargin(4,4,4,4);
			} 
		}

		GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Top_Begin_MidLevel_Single
		{
			
			map GFC_CtrlTheme_Bitmap_Control_Tab	=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Top_Begin_BaseLevel_Single;
			map GFC_Control								=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Top_Begin_BaseLevel_Single;
		}

		// Top Left - edge single
		GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Top_Begin_BaseLevel_SingleBeginEdge
		{			
			
			map GFC_CtrlTheme_Bitmap_Control_Tab	=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Top_Begin_BaseLevel_Single;
			map GFC_Control								=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Top_Begin_BaseLevel_Single;
		}

		// Top Right - edge single
		GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Top_Begin_BaseLevel_SingleEndEdge
		{			
				
			map GFC_CtrlTheme_Bitmap_Control_Tab	=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Top_Begin_BaseLevel_Single;
			map GFC_Control								=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Top_Begin_BaseLevel_Single;
		}

		// Top Both Edges
		GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Top_Begin_BaseLevel_SingleTwoEdge
		{
					
			map GFC_CtrlTheme_Bitmap_Control_Tab	=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Top_Begin_BaseLevel_Single;
			map GFC_Control								=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Top_Begin_BaseLevel_Single;
		}


		// Map the rest of the tab styles to this one for now
		// there is no special look for different alignments or levels

		with GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Top
		{
			//.Begin_BaseLevel_Single
			.Begin_BaseLevel_First				=	.Begin_BaseLevel_Single;
			.Begin_BaseLevel_Middle				=	.Begin_BaseLevel_Single;
			.Begin_BaseLevel_Last				=	.Begin_BaseLevel_Single;
			.Begin_TopLevel_Single				=	.Begin_MidLevel_Single;
			.Begin_TopLevel_First				=	.Begin_MidLevel_Single;
			.Begin_TopLevel_Middle				=	.Begin_MidLevel_Single;
			.Begin_TopLevel_Last				=	.Begin_MidLevel_Single;
			//.Begin_MidLevel_Single			=	.Begin_MidLevel_Single;
			.Begin_MidLevel_First				=	.Begin_MidLevel_Single;
			.Begin_MidLevel_Middle				=	.Begin_MidLevel_Single;
			.Begin_MidLevel_Last				=	.Begin_MidLevel_Single;
			// Don't define properties to themselves - prevent recursion
			//.Begin_BaseLevel_SingleBeginEdge	=	.Begin_BaseLevel_SingleBeginEdge;
			//.Begin_BaseLevel_SingleEndEdge	=	.Begin_BaseLevel_SingleEndEdge;
			//.Begin_BaseLevel_SingleTwoEdge	=	.Begin_BaseLevel_SingleTwoEdge;

			.Begin_BaseLevel_FirstBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.Begin_BaseLevel_FirstEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Begin_BaseLevel_FirstTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.Begin_BaseLevel_MiddleBeginEdge	=	.Begin_BaseLevel_SingleBeginEdge;
			.Begin_BaseLevel_MiddleEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Begin_BaseLevel_MiddleTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.Begin_BaseLevel_LastBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.Begin_BaseLevel_LastEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Begin_BaseLevel_LastTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;

			.Center_BaseLevel_Single			=	.Begin_BaseLevel_Single;
			.Center_BaseLevel_First				=	.Begin_BaseLevel_Single;
			.Center_BaseLevel_Middle			=	.Begin_BaseLevel_Single;
			.Center_BaseLevel_Last				=	.Begin_BaseLevel_Single;
			.Center_TopLevel_Single				=	.Begin_MidLevel_Single;
			.Center_TopLevel_First				=	.Begin_MidLevel_Single;
			.Center_TopLevel_Middle				=	.Begin_MidLevel_Single;
			.Center_TopLevel_Last				=	.Begin_MidLevel_Single;
			.Center_MidLevel_Single				=	.Begin_MidLevel_Single;
			.Center_MidLevel_First				=	.Begin_MidLevel_Single;
			.Center_MidLevel_Middle				=	.Begin_MidLevel_Single;
			.Center_MidLevel_Last				=	.Begin_MidLevel_Single;
			.Center_BaseLevel_SingleBeginEdge	=	.Begin_BaseLevel_SingleBeginEdge;
			.Center_BaseLevel_SingleEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Center_BaseLevel_SingleTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.Center_BaseLevel_FirstBeginEdge	=	.Begin_BaseLevel_SingleBeginEdge;
			.Center_BaseLevel_FirstEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Center_BaseLevel_FirstTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.Center_BaseLevel_MiddleBeginEdge	=	.Begin_BaseLevel_SingleBeginEdge;
			.Center_BaseLevel_MiddleEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Center_BaseLevel_MiddleTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.Center_BaseLevel_LastBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.Center_BaseLevel_LastEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Center_BaseLevel_LastTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;

			.End_BaseLevel_Single				=	.Begin_BaseLevel_Single;
			.End_BaseLevel_First				=	.Begin_BaseLevel_Single;
			.End_BaseLevel_Middle				=	.Begin_BaseLevel_Single;
			.End_BaseLevel_Last					=	.Begin_BaseLevel_Single;
			.End_TopLevel_Single				=	.Begin_MidLevel_Single;
			.End_TopLevel_First					=	.Begin_MidLevel_Single;
			.End_TopLevel_Middle				=	.Begin_MidLevel_Single;
			.End_TopLevel_Last					=	.Begin_MidLevel_Single;
			.End_MidLevel_Single				=	.Begin_MidLevel_Single;
			.End_MidLevel_First					=	.Begin_MidLevel_Single;
			.End_MidLevel_Middle				=	.Begin_MidLevel_Single;
			.End_MidLevel_Last					=	.Begin_MidLevel_Single;
			.End_BaseLevel_SingleBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.End_BaseLevel_SingleEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.End_BaseLevel_SingleTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.End_BaseLevel_FirstBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.End_BaseLevel_FirstEndEdge			=	.Begin_BaseLevel_SingleEndEdge;
			.End_BaseLevel_FirstTwoEdge			=	.Begin_BaseLevel_SingleTwoEdge;
			.End_BaseLevel_MiddleBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.End_BaseLevel_MiddleEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.End_BaseLevel_MiddleTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.End_BaseLevel_LastBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.End_BaseLevel_LastEndEdge			=	.Begin_BaseLevel_SingleEndEdge;
			.End_BaseLevel_LastTwoEdge			=	.Begin_BaseLevel_SingleTwoEdge;
		}



		// ***** Left Tab Styles
		
		GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Left_Begin_BaseLevel_Single
		{
			
			with GFC_CtrlTheme_Bitmap_Control_Tab_Skin_Full
			{				
				.Default
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 0, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 0, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 0, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 0, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Rollover
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 0, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 0, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 0, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 0, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Select
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Left.tga", HVGrid, 3, 3, 0, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Left.tga", HVGrid, 3, 3, 0, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Itemdisable
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 0, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 0, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 0, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.SelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Left.tga", HVGrid, 3, 3, 0, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Left.tga", HVGrid, 3, 3, 0, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Left.tga", HVGrid, 3, 3, 0, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
				}				
				.DisableSelect			
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Left.tga", HVGrid, 3, 3, 0, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
				}					
				.DisableSelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Left.tga", HVGrid, 3, 3, 0, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Left.tga", HVGrid, 3, 3, 0, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
				}

				// These share existing skins
				.Press							=	.Rollover;
				.SelectPress					=	.Select;
				.SelectRollover					=	.Select;
				.SelectItemdisable				=	.DisableSelect;
				.SelectFocusRollover			=	.SelectFocus;

				.Disable 						=	.Itemdisable;
				.DisablePress 					=	.Disable;
				.DisableRollover 				=	.Disable;
				.DisableItemdisable 			=	.Disable;
				.DisableSelectPress 			=	.DisableSelect;
				.DisableSelectRollover 			=	.DisableSelect;
				.DisableSelectItemdisable 		=	.DisableSelect;

				.DisableSelectFocusRollover 	=	.DisableSelectFocus;
			}

			// Right-cut skin
			with GFC_CtrlTheme_Bitmap_Control_Tab_Skin_EndCut
			{				
				.Default
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 1, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 1, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 1, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 1, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Rollover
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 1, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 1, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 1, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 1, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Select
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Left.tga", HVGrid, 3, 3, 1, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Itemdisable
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 1, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 1, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 1, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.SelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Left.tga", HVGrid, 3, 3, 1, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Left.tga", HVGrid, 3, 3, 1, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
				}				
				.DisableSelect			
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Left.tga", HVGrid, 3, 3, 1, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
				}					
				.DisableSelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Left.tga", HVGrid, 3, 3, 1, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Left.tga", HVGrid, 3, 3, 1, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
				}

				// These share existing skins
				.Press							=	.Rollover;
				.SelectPress					=	.Select;
				.SelectRollover					=	.Select;
				.SelectItemdisable				=	.DisableSelect;
				.SelectFocusRollover			=	.SelectFocus;

				.Disable 						=	.Itemdisable;
				.DisablePress 					=	.Disable;
				.DisableRollover 				=	.Disable;
				.DisableItemdisable 			=	.Disable;
				.DisableSelectPress 			=	.DisableSelect;
				.DisableSelectRollover 			=	.DisableSelect;
				.DisableSelectItemdisable 		=	.DisableSelect;

				.DisableSelectFocusRollover 	=	.DisableSelectFocus;
			}

			// Left-cut skin
			with GFC_CtrlTheme_Bitmap_Control_Tab_Skin_BeginCut
			{				
				.Default
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 2, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 2, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 2, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 2, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Rollover
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 2, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 2, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 2, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 2, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Select
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Left.tga", HVGrid, 3, 3, 2, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Itemdisable
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 2, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 2, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_Tabs_Left.tga", HVGrid, 3, 5, 2, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.SelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Left.tga", HVGrid, 3, 3, 2, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Left.tga", HVGrid, 3, 3, 2, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
				}				
				.DisableSelect			
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Left.tga", HVGrid, 3, 3, 2, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
				}					
				.DisableSelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Left.tga", HVGrid, 3, 3, 2, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Left.tga", HVGrid, 3, 3, 2, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
				}

				// These share existing skins
				.Press							=	.Rollover;
				.SelectPress					=	.Select;
				.SelectRollover					=	.Select;
				.SelectItemdisable				=	.DisableSelect;
				.SelectFocusRollover			=	.SelectFocus;

				.Disable 						=	.Itemdisable;
				.DisablePress 					=	.Disable;
				.DisableRollover 				=	.Disable;
				.DisableItemdisable 			=	.Disable;
				.DisableSelectPress 			=	.DisableSelect;
				.DisableSelectRollover 			=	.DisableSelect;
				.DisableSelectItemdisable 		=	.DisableSelect;

				.DisableSelectFocusRollover 	=	.DisableSelectFocus;
			}

			// Frame skin
			with GFC_CtrlTheme_Bitmap_Control_Tab_Skin_Frame
			{
				.Default
				{
					layer
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		=	GColorCombine(RevSubtract,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			=	GBitmap("FreeRealms/FR_Border.tga", HVGrid, 2, 3, 1, 0);
						Margin			=	GRectMargin(4,4,4,4);
					}
					layer 
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		=	GColorCombine(Add,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			=	GBitmap("FreeRealms/FR_Border.tga", HVGrid, 2, 3, 1, 2);
						Margin			=	GRectMargin(4,4,4,4);
					}
				}					
				.Disable
				{
					layer 
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		=	GColorCombine(Add,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			=	GBitmap("FreeRealms/FR_Border.tga", HVGrid, 2, 3, 1, 2);
						Margin			=	GRectMargin(4,4,4,4);
					}
				}
				.Winoff				=	.Default;
				.WinoffDisable		=	.Disable;
			}

			// Baseline skin - a hack in XP
			with GFC_CtrlTheme_Bitmap_Control_Tab_Skin_Baseline
			{
				.Default
				{
					layer
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE);
						DestCombine		=	GColorCombine(RevSubtract,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			=	GBitmap("FreeRealms/FR_BaselineV.tga", HVGrid, 1, 2, 0, 0);
						Margin			=	GRectMargin(0,0,0,2);
					}
					layer 
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE);
						DestCombine		=	GColorCombine(Add,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			=	GBitmap("FreeRealms/FR_BaselineV.tga", HVGrid, 1, 2, 0, 1);
						Margin			=	GRectMargin(0,0,0,2);
					}
				}
				.Disable
				{
					layer 
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE);
						DestCombine		=	GColorCombine(Add,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			=	GBitmap("FreeRealms/FR_BaselineV.tga", HVGrid, 1, 2, 0, 1);
						Margin			=	GRectMargin(0,0,0,2);
					}
				}
				.Winoff				=	.Default;
				.WinoffDisable		=	.Disable;
			}


			// Sizes for these tabs:
			with GFC_CtrlTheme_Bitmap_Control_Tab_Size
			{
				.SkinSizeExtent_Default			=	GRectMargin(3,7,5,5);
				.SkinSizeExtent_Select			=	GRectMargin(3,7,5,5);
				.SkinExtent_Default				=	GRectMargin(2,0,2,0);
				.SkinExtent_Select				=	GRectMargin(2,0,2,1);

				// Cut-off values
				// Minimum value that can be cut-off
				.SkinMinCutOffAmount_Default	=	3;
				.SkinMinCutOffAmount_Select		=	3;
				// Minimum size the cut-off value should be
				.SkinMinCutSize_Default			=	7;
				.SkinMinCutSize_Select			=	7;

				.BeginCut_ClipMargin_Default	=	GRectMargin(4,4,4,4);
				.BeginCut_ClipMargin_Select		=	GRectMargin(4,4,4,4);
				.EndCut_ClipMargin_Default		=	GRectMargin(4,4,4,4);
				.EndCut_ClipMargin_Select		=	GRectMargin(4,4,4,4);
			} 
		}

		// Left Top - edge single
		GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Left_Begin_BaseLevel_SingleBeginEdge
		{			
	
			map GFC_CtrlTheme_Bitmap_Control_Tab	=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Left_Begin_BaseLevel_Single;
			map GFC_Control								=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Left_Begin_BaseLevel_Single;
		}

		// Left Bottom - edge single
		GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Left_Begin_BaseLevel_SingleEndEdge
		{			

			map GFC_CtrlTheme_Bitmap_Control_Tab	=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Left_Begin_BaseLevel_Single;
			map GFC_Control								=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Left_Begin_BaseLevel_Single;
		}

		// Left Both Edges
		GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Left_Begin_BaseLevel_SingleTwoEdge
		{

			map GFC_CtrlTheme_Bitmap_Control_Tab	=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Left_Begin_BaseLevel_Single;
			map GFC_Control								=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Left_Begin_BaseLevel_Single;
		}
		
		with GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Left
		{
			//.Begin_BaseLevel_Single
			.Begin_BaseLevel_First				=	.Begin_BaseLevel_Single;
			.Begin_BaseLevel_Middle				=	.Begin_BaseLevel_Single;
			.Begin_BaseLevel_Last				=	.Begin_BaseLevel_Single;
			.Begin_TopLevel_Single				=	.Begin_BaseLevel_Single;
			.Begin_TopLevel_First				=	.Begin_BaseLevel_Single;
			.Begin_TopLevel_Middle				=	.Begin_BaseLevel_Single;
			.Begin_TopLevel_Last				=	.Begin_BaseLevel_Single;
			.Begin_MidLevel_Single				=	.Begin_BaseLevel_Single;
			.Begin_MidLevel_First				=	.Begin_BaseLevel_Single;
			.Begin_MidLevel_Middle				=	.Begin_BaseLevel_Single;
			.Begin_MidLevel_Last				=	.Begin_BaseLevel_Single;			
			// Skip Single - alreday defined
			.Begin_BaseLevel_FirstBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.Begin_BaseLevel_FirstEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Begin_BaseLevel_FirstTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.Begin_BaseLevel_MiddleBeginEdge	=	.Begin_BaseLevel_SingleBeginEdge;
			.Begin_BaseLevel_MiddleEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Begin_BaseLevel_MiddleTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.Begin_BaseLevel_LastBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.Begin_BaseLevel_LastEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Begin_BaseLevel_LastTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;

			.Center_BaseLevel_Single			=	.Begin_BaseLevel_Single;
			.Center_BaseLevel_First				=	.Begin_BaseLevel_Single;
			.Center_BaseLevel_Middle			=	.Begin_BaseLevel_Single;
			.Center_BaseLevel_Last				=	.Begin_BaseLevel_Single;
			.Center_TopLevel_Single				=	.Begin_BaseLevel_Single;
			.Center_TopLevel_First				=	.Begin_BaseLevel_Single;
			.Center_TopLevel_Middle				=	.Begin_BaseLevel_Single;
			.Center_TopLevel_Last				=	.Begin_BaseLevel_Single;
			.Center_MidLevel_Single				=	.Begin_BaseLevel_Single;
			.Center_MidLevel_First				=	.Begin_BaseLevel_Single;
			.Center_MidLevel_Middle				=	.Begin_BaseLevel_Single;
			.Center_MidLevel_Last				=	.Begin_BaseLevel_Single;
			.Center_BaseLevel_SingleBeginEdge	=	.Begin_BaseLevel_SingleBeginEdge;
			.Center_BaseLevel_SingleEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Center_BaseLevel_SingleTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.Center_BaseLevel_FirstBeginEdge	=	.Begin_BaseLevel_SingleBeginEdge;
			.Center_BaseLevel_FirstEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Center_BaseLevel_FirstTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.Center_BaseLevel_MiddleBeginEdge	=	.Begin_BaseLevel_SingleBeginEdge;
			.Center_BaseLevel_MiddleEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Center_BaseLevel_MiddleTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.Center_BaseLevel_LastBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.Center_BaseLevel_LastEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Center_BaseLevel_LastTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;

			.End_BaseLevel_Single				=	.Begin_BaseLevel_Single;
			.End_BaseLevel_First				=	.Begin_BaseLevel_Single;
			.End_BaseLevel_Middle				=	.Begin_BaseLevel_Single;
			.End_BaseLevel_Last					=	.Begin_BaseLevel_Single;
			.End_TopLevel_Single				=	.Begin_BaseLevel_Single;
			.End_TopLevel_First					=	.Begin_BaseLevel_Single;
			.End_TopLevel_Middle				=	.Begin_BaseLevel_Single;
			.End_TopLevel_Last					=	.Begin_BaseLevel_Single;
			.End_MidLevel_Single				=	.Begin_BaseLevel_Single;
			.End_MidLevel_First					=	.Begin_BaseLevel_Single;
			.End_MidLevel_Middle				=	.Begin_BaseLevel_Single;
			.End_MidLevel_Last					=	.Begin_BaseLevel_Single;
			.End_BaseLevel_SingleBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.End_BaseLevel_SingleEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.End_BaseLevel_SingleTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.End_BaseLevel_FirstBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.End_BaseLevel_FirstEndEdge			=	.Begin_BaseLevel_SingleEndEdge;
			.End_BaseLevel_FirstTwoEdge			=	.Begin_BaseLevel_SingleTwoEdge;
			.End_BaseLevel_MiddleBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.End_BaseLevel_MiddleEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.End_BaseLevel_MiddleTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.End_BaseLevel_LastBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.End_BaseLevel_LastEndEdge			=	.Begin_BaseLevel_SingleEndEdge;
			.End_BaseLevel_LastTwoEdge			=	.Begin_BaseLevel_SingleTwoEdge;
		}




		// ***** Bottom Tab Styles

		GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Bottom_Begin_BaseLevel_Single
		{
			
			with GFC_CtrlTheme_Bitmap_Control_Tab_Skin_Full
			{
				.Default
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 0, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 0, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 0, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 0, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Rollover
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 0, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 0, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 0, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 0, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Select
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Bottom.tga", HVGrid, 3, 3, 0, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Bottom.tga", HVGrid, 3, 3, 0, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Itemdisable
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 0, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 0, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 0, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.SelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Bottom.tga", HVGrid, 3, 3, 0, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Bottom.tga", HVGrid, 3, 3, 0, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Bottom.tga", HVGrid, 3, 3, 0, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
				}				
				.DisableSelect			
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Bottom.tga", HVGrid, 3, 3, 0, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
				}					
				.DisableSelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Bottom.tga", HVGrid, 3, 3, 0, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Bottom.tga", HVGrid, 3, 3, 0, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
				}

				// These share existing skins
				.Press							=	.Rollover;
				.SelectPress					=	.Select;
				.SelectRollover					=	.Select;
				.SelectItemdisable				=	.DisableSelect;
				.SelectFocusRollover			=	.SelectFocus;

				.Disable 						=	.Itemdisable;
				.DisablePress 					=	.Disable;
				.DisableRollover 				=	.Disable;
				.DisableItemdisable 			=	.Disable;
				.DisableSelectPress 			=	.DisableSelect;
				.DisableSelectRollover 			=	.DisableSelect;
				.DisableSelectItemdisable 		=	.DisableSelect;

				.DisableSelectFocusRollover 	=	.DisableSelectFocus;
			}

			// Right-cut skin
			with GFC_CtrlTheme_Bitmap_Control_Tab_Skin_EndCut
			{				
				.Default
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 1, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 1, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 1, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 1, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Rollover
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 1, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 1, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 1, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 1, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Select
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Bottom.tga", HVGrid, 3, 3, 1, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Itemdisable
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 1, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 1, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 1, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.SelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Bottom.tga", HVGrid, 3, 3, 1, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Bottom.tga", HVGrid, 3, 3, 1, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
				}				
				.DisableSelect			
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Bottom.tga", HVGrid, 3, 3, 1, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
				}					
				.DisableSelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Bottom.tga", HVGrid, 3, 3, 1, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Bottom.tga", HVGrid, 3, 3, 1, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
				}

				// These share existing skins
				.Press							=	.Rollover;
				.SelectPress					=	.Select;
				.SelectRollover					=	.Select;
				.SelectItemdisable				=	.DisableSelect;
				.SelectFocusRollover			=	.SelectFocus;

				.Disable 						=	.Itemdisable;
				.DisablePress 					=	.Disable;
				.DisableRollover 				=	.Disable;
				.DisableItemdisable 			=	.Disable;
				.DisableSelectPress 			=	.DisableSelect;
				.DisableSelectRollover 			=	.DisableSelect;
				.DisableSelectItemdisable 		=	.DisableSelect;

				.DisableSelectFocusRollover 	=	.DisableSelectFocus;
			}

			// Left-cut skin
			with GFC_CtrlTheme_Bitmap_Control_Tab_Skin_BeginCut
			{				
				.Default
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 2, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 2, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 2, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 2, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Rollover
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 2, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 2, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 2, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 2, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Select
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Bottom.tga", HVGrid, 3, 3, 2, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Itemdisable
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 2, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 2, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_Tabs_Bottom.tga", HVGrid, 3, 5, 2, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.SelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Bottom.tga", HVGrid, 3, 3, 2, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Bottom.tga", HVGrid, 3, 3, 2, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
				}				
				.DisableSelect			
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Bottom.tga", HVGrid, 3, 3, 2, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
				}					
				.DisableSelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Bottom.tga", HVGrid, 3, 3, 2, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Bottom.tga", HVGrid, 3, 3, 2, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
				}

				// These share existing skins
				.Press							=	.Rollover;
				.SelectPress					=	.Select;
				.SelectRollover					=	.Select;
				.SelectItemdisable				=	.DisableSelect;
				.SelectFocusRollover			=	.SelectFocus;

				.Disable 						=	.Itemdisable;
				.DisablePress 					=	.Disable;
				.DisableRollover 				=	.Disable;
				.DisableItemdisable 			=	.Disable;
				.DisableSelectPress 			=	.DisableSelect;
				.DisableSelectRollover 			=	.DisableSelect;
				.DisableSelectItemdisable 		=	.DisableSelect;

				.DisableSelectFocusRollover 	=	.DisableSelectFocus;
			}

			// Frame skin
			with GFC_CtrlTheme_Bitmap_Control_Tab_Skin_Frame
			{
				.Default
				{
					layer
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		=	GColorCombine(RevSubtract,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			=	GBitmap("FreeRealms/FR_Border.tga", HVGrid, 2, 3, 1, 0);
						Margin			=	GRectMargin(4,4,4,4);
					}
					layer 
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		=	GColorCombine(Add,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			=	GBitmap("FreeRealms/FR_Border.tga", HVGrid, 2, 3, 1, 2);
						Margin			=	GRectMargin(4,4,4,4);
					}
				}					
				.Disable
				{
					layer 
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		=	GColorCombine(Add,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			=	GBitmap("FreeRealms/FR_Border.tga", HVGrid, 2, 3, 1, 2);
						Margin			=	GRectMargin(4,4,4,4);
					}
				}
				.Winoff				=	.Default;
				.WinoffDisable		=	.Disable;
			}
			
			// Bottom Baseline skin - a hack in XP
			with GFC_CtrlTheme_Bitmap_Control_Tab_Skin_Baseline
			{
				.Default
				{
					layer
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE);
						DestCombine		=	GColorCombine(RevSubtract,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			=	GBitmap("FreeRealms/FR_Baseline_Bottom.tga", HVGrid, 1, 2, 0, 0);
						Margin			=	GRectMargin(0,0,0,3);
					}
					layer 
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE);
						DestCombine		=	GColorCombine(Add,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			=	GBitmap("FreeRealms/FR_Baseline_Bottom.tga", HVGrid, 1, 2, 0, 1);
						Margin			=	GRectMargin(0,0,0,3);
					}
				}
				.Disable
				{
					layer 
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE);
						DestCombine		=	GColorCombine(Add,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			=	GBitmap("FreeRealms/FR_Baseline_Bottom.tga", HVGrid, 1, 2, 0, 1);
						Margin			=	GRectMargin(0,0,0,3);
					}
				}
				.Winoff				=	.Default;
				.WinoffDisable		=	.Disable;
			}


			// Sizes for these tabs:
			with GFC_CtrlTheme_Bitmap_Control_Tab_Size
			{
				.SkinSizeExtent_Default			=	GRectMargin(7,5,7,3);
				.SkinSizeExtent_Select			=	GRectMargin(7,5,7,3);
				.SkinExtent_Default				=	GRectMargin(2,0,2,0);
				.SkinExtent_Select				=	GRectMargin(2,0,2,1);

				// Cut-off values
				// Minimum value that can be cut-off
				.SkinMinCutOffAmount_Default	=	3;
				.SkinMinCutOffAmount_Select		=	3;
				// Minimum size the cut-off value should be
				.SkinMinCutSize_Default			=	7;
				.SkinMinCutSize_Select			=	7;

				.BeginCut_ClipMargin_Default	=	GRectMargin(4,4,4,4);
				.BeginCut_ClipMargin_Select		=	GRectMargin(4,4,4,4);
				.EndCut_ClipMargin_Default		=	GRectMargin(4,4,4,4);
				.EndCut_ClipMargin_Select		=	GRectMargin(4,4,4,4);
			} 
		}

		// Bottom Left - edge single
		GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Bottom_Begin_BaseLevel_SingleBeginEdge
		{			
	
			map GFC_CtrlTheme_Bitmap_Control_Tab	=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Bottom_Begin_BaseLevel_Single;
			map GFC_Control								=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Bottom_Begin_BaseLevel_Single;
		}

		// Bottom Right - edge single
		GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Bottom_Begin_BaseLevel_SingleEndEdge
		{			

			map GFC_CtrlTheme_Bitmap_Control_Tab	=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Bottom_Begin_BaseLevel_Single;
			map GFC_Control								=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Bottom_Begin_BaseLevel_Single;
		}

		// Bottom Both Edges
		GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Bottom_Begin_BaseLevel_SingleTwoEdge
		{
	
			map GFC_CtrlTheme_Bitmap_Control_Tab	=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Bottom_Begin_BaseLevel_Single;
			map GFC_Control								=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Bottom_Begin_BaseLevel_Single;
		}

		// Map the rest of the tab styles to this one for now
		// there is no special look for different alignments or levels

		with GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Bottom
		{
			//.Begin_BaseLevel_Single
			.Begin_BaseLevel_First				=	.Begin_BaseLevel_Single;
			.Begin_BaseLevel_Middle				=	.Begin_BaseLevel_Single;
			.Begin_BaseLevel_Last				=	.Begin_BaseLevel_Single;
			.Begin_TopLevel_Single				=	.Begin_BaseLevel_Single;
			.Begin_TopLevel_First				=	.Begin_BaseLevel_Single;
			.Begin_TopLevel_Middle				=	.Begin_BaseLevel_Single;
			.Begin_TopLevel_Last				=	.Begin_BaseLevel_Single;
			.Begin_MidLevel_Single				=	.Begin_BaseLevel_Single;
			.Begin_MidLevel_First				=	.Begin_BaseLevel_Single;
			.Begin_MidLevel_Middle				=	.Begin_BaseLevel_Single;
			.Begin_MidLevel_Last				=	.Begin_BaseLevel_Single;			
			// Skip Single - alreday defined
			.Begin_BaseLevel_FirstBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.Begin_BaseLevel_FirstEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Begin_BaseLevel_FirstTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.Begin_BaseLevel_MiddleBeginEdge	=	.Begin_BaseLevel_SingleBeginEdge;
			.Begin_BaseLevel_MiddleEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Begin_BaseLevel_MiddleTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.Begin_BaseLevel_LastBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.Begin_BaseLevel_LastEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Begin_BaseLevel_LastTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;

			.Center_BaseLevel_Single			=	.Begin_BaseLevel_Single;
			.Center_BaseLevel_First				=	.Begin_BaseLevel_Single;
			.Center_BaseLevel_Middle			=	.Begin_BaseLevel_Single;
			.Center_BaseLevel_Last				=	.Begin_BaseLevel_Single;
			.Center_TopLevel_Single				=	.Begin_BaseLevel_Single;
			.Center_TopLevel_First				=	.Begin_BaseLevel_Single;
			.Center_TopLevel_Middle				=	.Begin_BaseLevel_Single;
			.Center_TopLevel_Last				=	.Begin_BaseLevel_Single;
			.Center_MidLevel_Single				=	.Begin_BaseLevel_Single;
			.Center_MidLevel_First				=	.Begin_BaseLevel_Single;
			.Center_MidLevel_Middle				=	.Begin_BaseLevel_Single;
			.Center_MidLevel_Last				=	.Begin_BaseLevel_Single;
			.Center_BaseLevel_SingleBeginEdge	=	.Begin_BaseLevel_SingleBeginEdge;
			.Center_BaseLevel_SingleEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Center_BaseLevel_SingleTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.Center_BaseLevel_FirstBeginEdge	=	.Begin_BaseLevel_SingleBeginEdge;
			.Center_BaseLevel_FirstEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Center_BaseLevel_FirstTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.Center_BaseLevel_MiddleBeginEdge	=	.Begin_BaseLevel_SingleBeginEdge;
			.Center_BaseLevel_MiddleEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Center_BaseLevel_MiddleTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.Center_BaseLevel_LastBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.Center_BaseLevel_LastEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Center_BaseLevel_LastTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;

			.End_BaseLevel_Single				=	.Begin_BaseLevel_Single;
			.End_BaseLevel_First				=	.Begin_BaseLevel_Single;
			.End_BaseLevel_Middle				=	.Begin_BaseLevel_Single;
			.End_BaseLevel_Last					=	.Begin_BaseLevel_Single;
			.End_TopLevel_Single				=	.Begin_BaseLevel_Single;
			.End_TopLevel_First					=	.Begin_BaseLevel_Single;
			.End_TopLevel_Middle				=	.Begin_BaseLevel_Single;
			.End_TopLevel_Last					=	.Begin_BaseLevel_Single;
			.End_MidLevel_Single				=	.Begin_BaseLevel_Single;
			.End_MidLevel_First					=	.Begin_BaseLevel_Single;
			.End_MidLevel_Middle				=	.Begin_BaseLevel_Single;
			.End_MidLevel_Last					=	.Begin_BaseLevel_Single;
			.End_BaseLevel_SingleBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.End_BaseLevel_SingleEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.End_BaseLevel_SingleTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.End_BaseLevel_FirstBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.End_BaseLevel_FirstEndEdge			=	.Begin_BaseLevel_SingleEndEdge;
			.End_BaseLevel_FirstTwoEdge			=	.Begin_BaseLevel_SingleTwoEdge;
			.End_BaseLevel_MiddleBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.End_BaseLevel_MiddleEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.End_BaseLevel_MiddleTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.End_BaseLevel_LastBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.End_BaseLevel_LastEndEdge			=	.Begin_BaseLevel_SingleEndEdge;
			.End_BaseLevel_LastTwoEdge			=	.Begin_BaseLevel_SingleTwoEdge;
		}



		// ***** Right Tab Styles
		
		GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Right_Begin_BaseLevel_Single
		{
			
			with GFC_CtrlTheme_Bitmap_Control_Tab_Skin_Full
			{
				.Default
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 0, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 0, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 0, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 0, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Rollover
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 0, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 0, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 0, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 0, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Select
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Right.tga", HVGrid, 3, 3, 0, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Right.tga", HVGrid, 3, 3, 0, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Itemdisable
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 0, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 0, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 0, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.SelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Right.tga", HVGrid, 3, 3, 0, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Right.tga", HVGrid, 3, 3, 0, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Right.tga", HVGrid, 3, 3, 0, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
				}				
				.DisableSelect			
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Right.tga", HVGrid, 3, 3, 0, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
				}					
				.DisableSelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Right.tga", HVGrid, 3, 3, 0, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Right.tga", HVGrid, 3, 3, 0, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
				}

				// These share existing skins
				.Press							=	.Rollover;
				.SelectPress					=	.Select;
				.SelectRollover					=	.Select;
				.SelectItemdisable				=	.DisableSelect;
				.SelectFocusRollover			=	.SelectFocus;

				.Disable 						=	.Itemdisable;
				.DisablePress 					=	.Disable;
				.DisableRollover 				=	.Disable;
				.DisableItemdisable 			=	.Disable;
				.DisableSelectPress 			=	.DisableSelect;
				.DisableSelectRollover 			=	.DisableSelect;
				.DisableSelectItemdisable 		=	.DisableSelect;

				.DisableSelectFocusRollover 	=	.DisableSelectFocus;
			}

			// Right-cut skin
			with GFC_CtrlTheme_Bitmap_Control_Tab_Skin_EndCut
			{				
				.Default
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 1, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 1, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 1, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 1, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Rollover
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 1, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 1, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 1, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 1, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Select
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Right.tga", HVGrid, 3, 3, 1, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Itemdisable
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 1, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 1, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 1, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.SelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Right.tga", HVGrid, 3, 3, 1, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Right.tga", HVGrid, 3, 3, 1, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
				}				
				.DisableSelect			
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Right.tga", HVGrid, 3, 3, 1, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
				}					
				.DisableSelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Right.tga", HVGrid, 3, 3, 1, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Right.tga", HVGrid, 3, 3, 1, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
				}

				// These share existing skins
				.Press							=	.Rollover;
				.SelectPress					=	.Select;
				.SelectRollover					=	.Select;
				.SelectItemdisable				=	.DisableSelect;
				.SelectFocusRollover			=	.SelectFocus;

				.Disable 						=	.Itemdisable;
				.DisablePress 					=	.Disable;
				.DisableRollover 				=	.Disable;
				.DisableItemdisable 			=	.Disable;
				.DisableSelectPress 			=	.DisableSelect;
				.DisableSelectRollover 			=	.DisableSelect;
				.DisableSelectItemdisable 		=	.DisableSelect;

				.DisableSelectFocusRollover 	=	.DisableSelectFocus;
			}

			// Left-cut skin
			with GFC_CtrlTheme_Bitmap_Control_Tab_Skin_BeginCut
			{				
				.Default
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 2, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 2, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 2, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 2, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Rollover
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(RevSubtract,Disable);
						FactorCombine	= GColorCombine(Modulate,Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 2, 0);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 2, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceRoll2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 2, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 2, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Select
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Right.tga", HVGrid, 3, 3, 2, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.Itemdisable
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(BlendSource,Disable);
						FactorCombine	= GColorCombine(Modulate, Modulate);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Surface1;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 2, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_SurfaceDis2;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 2, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_Tabs_Right.tga", HVGrid, 3, 5, 2, 3);
						Margin			= GRectMargin(10,10,10,12);
					}
				}
				.SelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Right.tga", HVGrid, 3, 3, 2, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Right.tga", HVGrid, 3, 3, 2, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
				}				
				.DisableSelect			
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Right.tga", HVGrid, 3, 3, 2, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
				}					
				.DisableSelectFocus
				{
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Right.tga", HVGrid, 3, 3, 2, 1);
						Margin			= GRectMargin(10,10,10,12);
					}
					layer
					{
						LayerFlags		= GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		= GColorCombine(Add,Disable);
						FactorCombine	= GColorCombine(Modulate, Source);
						FactorColor		= SF_CtrlTheme_FreeRealms_Control_Color_OutlineFocus;
						Image			= GBitmap("FreeRealms/FR_TabsSelect_Right.tga", HVGrid, 3, 3, 2, 2);
						Margin			= GRectMargin(10,10,10,12);
					}
				}

				// These share existing skins
				.Press							=	.Rollover;
				.SelectPress					=	.Select;
				.SelectRollover					=	.Select;
				.SelectItemdisable				=	.DisableSelect;
				.SelectFocusRollover			=	.SelectFocus;

				.Disable 						=	.Itemdisable;
				.DisablePress 					=	.Disable;
				.DisableRollover 				=	.Disable;
				.DisableItemdisable 			=	.Disable;
				.DisableSelectPress 			=	.DisableSelect;
				.DisableSelectRollover 			=	.DisableSelect;
				.DisableSelectItemdisable 		=	.DisableSelect;

				.DisableSelectFocusRollover 	=	.DisableSelectFocus;
			}

			// Frame skin
			with GFC_CtrlTheme_Bitmap_Control_Tab_Skin_Frame
			{
				.Default
				{
					layer
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		=	GColorCombine(RevSubtract,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			=	GBitmap("FreeRealms/FR_Border.tga", HVGrid, 2, 3, 1, 0);
						Margin			=	GRectMargin(4,4,4,4);
					}
					layer 
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		=	GColorCombine(Add,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			=	GBitmap("FreeRealms/FR_Border.tga", HVGrid, 2, 3, 1, 2);
						Margin			=	GRectMargin(4,4,4,4);
					}
				}					
				.Disable
				{
					layer 
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_EMPTY, GFC_BITMAPSKIN_SIDES_SCALE);
						DestCombine		=	GColorCombine(Add,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			=	GBitmap("FreeRealms/FR_Border.tga", HVGrid, 2, 3, 1, 2);
						Margin			=	GRectMargin(4,4,4,4);
					}
				}
				.Winoff				=	.Default;
				.WinoffDisable		=	.Disable;
			}

			// Right Baseline skin - a hack in XP
			with GFC_CtrlTheme_Bitmap_Control_Tab_Skin_Baseline
			{
				.Default
				{
					layer
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE);
						DestCombine		=	GColorCombine(RevSubtract,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_DropShadow;
						Image			=	GBitmap("FreeRealms/FR_BaselineV.tga", HVGrid, 1, 2, 0, 0);
						Margin			=	GRectMargin(0,0,0,2);
					}
					layer 
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE);
						DestCombine		=	GColorCombine(Add,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_Outline;
						Image			=	GBitmap("FreeRealms/FR_BaselineV.tga", HVGrid, 1, 2, 0, 1);
						Margin			=	GRectMargin(0,0,0,2);
					}
				}
				.Disable
				{
					layer 
					{
						LayerFlags		=	GFlags(GCtrlBitmapSkin, GFC_BITMAPSKIN_CENTER_SCALE);
						DestCombine		=	GColorCombine(Add,Disable);
						FactorCombine	=	GColorCombine(Modulate,Source);
						FactorColor		=	SF_CtrlTheme_FreeRealms_Control_Color_OutlineDis;
						Image			=	GBitmap("FreeRealms/FR_BaselineV.tga", HVGrid, 1, 2, 0, 1);
						Margin			=	GRectMargin(0,0,0,2);
					}
				}
				.Winoff				=	.Default;
				.WinoffDisable		=	.Disable;
			}

			// Sizes for these tabs:
			with GFC_CtrlTheme_Bitmap_Control_Tab_Size
			{
				.SkinSizeExtent_Default			=	GRectMargin(5,7,3,5);
				.SkinSizeExtent_Select			=	GRectMargin(5,7,3,5);
				.SkinExtent_Default				=	GRectMargin(2,0,2,0);
				.SkinExtent_Select				=	GRectMargin(2,0,2,1);

				// Cut-off values
				// Minimum value that can be cut-off
				.SkinMinCutOffAmount_Default	=	3;
				.SkinMinCutOffAmount_Select		=	3;
				// Minimum size the cut-off value should be
				.SkinMinCutSize_Default			=	7;
				.SkinMinCutSize_Select			=	7;

				.BeginCut_ClipMargin_Default	=	GRectMargin(4,4,4,4);
				.BeginCut_ClipMargin_Select		=	GRectMargin(4,4,4,4);
				.EndCut_ClipMargin_Default		=	GRectMargin(4,4,4,4);
				.EndCut_ClipMargin_Select		=	GRectMargin(4,4,4,4);
			} 
		}


		// Right Top - edge single
		GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Right_Begin_BaseLevel_SingleBeginEdge
		{			
	
			map GFC_CtrlTheme_Bitmap_Control_Tab	=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Right_Begin_BaseLevel_Single;
			map GFC_Control								=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Right_Begin_BaseLevel_Single;
		}

		// Right Bottom - edge single
		GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Right_Begin_BaseLevel_SingleEndEdge
		{			

			map GFC_CtrlTheme_Bitmap_Control_Tab	=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Right_Begin_BaseLevel_Single;
			map GFC_Control								=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Right_Begin_BaseLevel_Single;
		}

		// Right Both Edges
		GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Right_Begin_BaseLevel_SingleTwoEdge
		{
	
			map GFC_CtrlTheme_Bitmap_Control_Tab	=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Right_Begin_BaseLevel_Single;
			map GFC_Control								=	GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Right_Begin_BaseLevel_Single;
		}

		
		with GFC_CtrlTheme_Bitmap_Control_Tab_SkinStyle_Right
		{
			//.Begin_BaseLevel_Single
			.Begin_BaseLevel_First				=	.Begin_BaseLevel_Single;
			.Begin_BaseLevel_Middle				=	.Begin_BaseLevel_Single;
			.Begin_BaseLevel_Last				=	.Begin_BaseLevel_Single;
			.Begin_TopLevel_Single				=	.Begin_BaseLevel_Single;
			.Begin_TopLevel_First				=	.Begin_BaseLevel_Single;
			.Begin_TopLevel_Middle				=	.Begin_BaseLevel_Single;
			.Begin_TopLevel_Last				=	.Begin_BaseLevel_Single;
			.Begin_MidLevel_Single				=	.Begin_BaseLevel_Single;
			.Begin_MidLevel_First				=	.Begin_BaseLevel_Single;
			.Begin_MidLevel_Middle				=	.Begin_BaseLevel_Single;
			.Begin_MidLevel_Last				=	.Begin_BaseLevel_Single;			
			// Skip Single - alreday defined
			.Begin_BaseLevel_FirstBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.Begin_BaseLevel_FirstEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Begin_BaseLevel_FirstTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.Begin_BaseLevel_MiddleBeginEdge	=	.Begin_BaseLevel_SingleBeginEdge;
			.Begin_BaseLevel_MiddleEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Begin_BaseLevel_MiddleTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.Begin_BaseLevel_LastBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.Begin_BaseLevel_LastEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Begin_BaseLevel_LastTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;

			.Center_BaseLevel_Single			=	.Begin_BaseLevel_Single;
			.Center_BaseLevel_First				=	.Begin_BaseLevel_Single;
			.Center_BaseLevel_Middle			=	.Begin_BaseLevel_Single;
			.Center_BaseLevel_Last				=	.Begin_BaseLevel_Single;
			.Center_TopLevel_Single				=	.Begin_BaseLevel_Single;
			.Center_TopLevel_First				=	.Begin_BaseLevel_Single;
			.Center_TopLevel_Middle				=	.Begin_BaseLevel_Single;
			.Center_TopLevel_Last				=	.Begin_BaseLevel_Single;
			.Center_MidLevel_Single				=	.Begin_BaseLevel_Single;
			.Center_MidLevel_First				=	.Begin_BaseLevel_Single;
			.Center_MidLevel_Middle				=	.Begin_BaseLevel_Single;
			.Center_MidLevel_Last				=	.Begin_BaseLevel_Single;
			.Center_BaseLevel_SingleBeginEdge	=	.Begin_BaseLevel_SingleBeginEdge;
			.Center_BaseLevel_SingleEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Center_BaseLevel_SingleTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.Center_BaseLevel_FirstBeginEdge	=	.Begin_BaseLevel_SingleBeginEdge;
			.Center_BaseLevel_FirstEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Center_BaseLevel_FirstTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.Center_BaseLevel_MiddleBeginEdge	=	.Begin_BaseLevel_SingleBeginEdge;
			.Center_BaseLevel_MiddleEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Center_BaseLevel_MiddleTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.Center_BaseLevel_LastBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.Center_BaseLevel_LastEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.Center_BaseLevel_LastTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;

			.End_BaseLevel_Single				=	.Begin_BaseLevel_Single;
			.End_BaseLevel_First				=	.Begin_BaseLevel_Single;
			.End_BaseLevel_Middle				=	.Begin_BaseLevel_Single;
			.End_BaseLevel_Last					=	.Begin_BaseLevel_Single;
			.End_TopLevel_Single				=	.Begin_BaseLevel_Single;
			.End_TopLevel_First					=	.Begin_BaseLevel_Single;
			.End_TopLevel_Middle				=	.Begin_BaseLevel_Single;
			.End_TopLevel_Last					=	.Begin_BaseLevel_Single;
			.End_MidLevel_Single				=	.Begin_BaseLevel_Single;
			.End_MidLevel_First					=	.Begin_BaseLevel_Single;
			.End_MidLevel_Middle				=	.Begin_BaseLevel_Single;
			.End_MidLevel_Last					=	.Begin_BaseLevel_Single;
			.End_BaseLevel_SingleBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.End_BaseLevel_SingleEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.End_BaseLevel_SingleTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.End_BaseLevel_FirstBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.End_BaseLevel_FirstEndEdge			=	.Begin_BaseLevel_SingleEndEdge;
			.End_BaseLevel_FirstTwoEdge			=	.Begin_BaseLevel_SingleTwoEdge;
			.End_BaseLevel_MiddleBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.End_BaseLevel_MiddleEndEdge		=	.Begin_BaseLevel_SingleEndEdge;
			.End_BaseLevel_MiddleTwoEdge		=	.Begin_BaseLevel_SingleTwoEdge;
			.End_BaseLevel_LastBeginEdge		=	.Begin_BaseLevel_SingleBeginEdge;
			.End_BaseLevel_LastEndEdge			=	.Begin_BaseLevel_SingleEndEdge;
			.End_BaseLevel_LastTwoEdge			=	.Begin_BaseLevel_SingleTwoEdge;
		}									

		
		map GFC_CtrlTheme_Bitmap_Control_Tab	=	GFC_Control_DefaultTab_Style;
		map GFC_Control								=	GFC_Control_DefaultTab_Style;
	}



}


	



	
